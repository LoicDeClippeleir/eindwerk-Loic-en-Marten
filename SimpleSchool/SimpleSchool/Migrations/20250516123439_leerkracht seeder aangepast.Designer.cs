// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SimpleSchool.Data;

#nullable disable

namespace SimpleSchool.Migrations
{
    [DbContext(typeof(SimpleSchoolContext))]
    [Migration("20250516123439_leerkracht seeder aangepast")]
    partial class leerkrachtseederaangepast
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("OpleidingVak", b =>
                {
                    b.Property<int>("OpleidingenId")
                        .HasColumnType("int");

                    b.Property<int>("VakkenId")
                        .HasColumnType("int");

                    b.HasKey("OpleidingenId", "VakkenId");

                    b.HasIndex("VakkenId");

                    b.ToTable("Opleidingsvakken", (string)null);
                });

            modelBuilder.Entity("Simpleschool.Models.Leerkracht", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Adres")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EMail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("GeboorteDatum")
                        .HasColumnType("datetime2");

                    b.Property<string>("Naam")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Leerkracht");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Adres = "Johanneslaan 046b",
                            EMail = "tenetur",
                            GeboorteDatum = new DateTime(2024, 9, 4, 15, 38, 7, 700, DateTimeKind.Local).AddTicks(4399),
                            Naam = "Numquam sed est ea sit consequuntur molestiae ipsa dolorem enim necessitatibus atque consequatur et rerum reprehenderit laudantium quam saepe eos."
                        },
                        new
                        {
                            Id = 2,
                            Adres = "Brinkpassage 391 I",
                            EMail = "quisquam",
                            GeboorteDatum = new DateTime(2024, 7, 14, 7, 59, 38, 432, DateTimeKind.Local).AddTicks(9936),
                            Naam = "Consequuntur ratione dignissimos corrupti culpa dolorem et omnis corporis dolores blanditiis ut illum ab quibusdam provident sit accusamus amet rem."
                        },
                        new
                        {
                            Id = 3,
                            Adres = "Jonghof 958 I",
                            EMail = "quod",
                            GeboorteDatum = new DateTime(2024, 12, 24, 12, 36, 13, 815, DateTimeKind.Local).AddTicks(1126),
                            Naam = "Necessitatibus minus dolor assumenda qui quos quasi dolor voluptas ut incidunt saepe nihil libero quisquam sequi animi odio velit repudiandae."
                        },
                        new
                        {
                            Id = 4,
                            Adres = "Thomassteeg 103c",
                            EMail = "incidunt",
                            GeboorteDatum = new DateTime(2024, 11, 6, 2, 43, 52, 958, DateTimeKind.Local).AddTicks(9724),
                            Naam = "Repellendus corrupti dolores odit repellendus eos ut occaecati ad sed reiciendis excepturi vitae enim fuga iste non rerum vel modi."
                        },
                        new
                        {
                            Id = 5,
                            Adres = "Meijerpark 247 II",
                            EMail = "sed",
                            GeboorteDatum = new DateTime(2024, 10, 17, 7, 25, 59, 514, DateTimeKind.Local).AddTicks(8335),
                            Naam = "Facere id enim dolor laboriosam aut quaerat officiis dolor recusandae aut dolorem quia nihil molestiae consequatur neque nisi rem dolor."
                        },
                        new
                        {
                            Id = 6,
                            Adres = "Jansensloot 428a",
                            EMail = "et",
                            GeboorteDatum = new DateTime(2024, 8, 4, 17, 38, 27, 201, DateTimeKind.Local).AddTicks(2361),
                            Naam = "Ad sit expedita accusamus expedita debitis culpa sapiente libero deserunt explicabo perspiciatis magni quis repellat voluptas facere reiciendis unde possimus."
                        },
                        new
                        {
                            Id = 7,
                            Adres = "Basstraat 858b",
                            EMail = "et",
                            GeboorteDatum = new DateTime(2024, 10, 30, 18, 37, 3, 723, DateTimeKind.Local).AddTicks(3911),
                            Naam = "Officiis nisi ut modi nemo maiores et dignissimos nostrum quae quae vero rerum reiciendis voluptatum quibusdam quas aliquid laboriosam et."
                        },
                        new
                        {
                            Id = 8,
                            Adres = "Vissersteeg 895b",
                            EMail = "amet",
                            GeboorteDatum = new DateTime(2025, 1, 30, 15, 31, 10, 174, DateTimeKind.Local).AddTicks(2810),
                            Naam = "Molestiae vel perferendis sit qui veritatis voluptates fugit autem voluptas eum quas quis asperiores debitis quia reiciendis occaecati est sit."
                        },
                        new
                        {
                            Id = 9,
                            Adres = "Lottestraat 868a",
                            EMail = "incidunt",
                            GeboorteDatum = new DateTime(2025, 3, 4, 13, 59, 42, 905, DateTimeKind.Local).AddTicks(8263),
                            Naam = "Ea atque non vero dolores vero eius beatae illum pariatur laboriosam iusto laboriosam impedit ut minus ut ut praesentium excepturi."
                        },
                        new
                        {
                            Id = 10,
                            Adres = "Stijndijk 998a",
                            EMail = "fugiat",
                            GeboorteDatum = new DateTime(2025, 3, 22, 11, 41, 32, 847, DateTimeKind.Local).AddTicks(1044),
                            Naam = "Sed distinctio minima et cum dolorem eaque esse minus quos voluptatem perferendis alias voluptas impedit non molestias repellat porro sit."
                        });
                });

            modelBuilder.Entity("Simpleschool.Models.Leerling", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Adres")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EMail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("GeboorteDatum")
                        .HasColumnType("datetime2");

                    b.Property<string>("Naam")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OpleidingId")
                        .HasColumnType("int");

                    b.Property<int>("StudentenkaartId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OpleidingId");

                    b.HasIndex("StudentenkaartId")
                        .IsUnique();

                    b.ToTable("Leerling");

                    b.HasData(
                        new
                        {
                            Id = 11,
                            Adres = "Amberweg 167b",
                            EMail = "aliquid",
                            GeboorteDatum = new DateTime(2025, 3, 2, 9, 43, 27, 576, DateTimeKind.Local).AddTicks(6036),
                            Naam = "Animi sequi possimus aut fugit fugit nulla vitae praesentium sit non libero sint ipsum impedit quod facilis doloribus est et.",
                            OpleidingId = 11,
                            StudentenkaartId = 11
                        },
                        new
                        {
                            Id = 12,
                            Adres = "Leeuwenplein 63",
                            EMail = "et",
                            GeboorteDatum = new DateTime(2025, 5, 15, 5, 3, 29, 248, DateTimeKind.Local).AddTicks(9367),
                            Naam = "Illum beatae id magnam aut illo vel rerum et ratione ullam velit eveniet nihil ab libero quis ducimus esse nisi.",
                            OpleidingId = 12,
                            StudentenkaartId = 12
                        },
                        new
                        {
                            Id = 13,
                            Adres = "Dijkmarkt 165",
                            EMail = "mollitia",
                            GeboorteDatum = new DateTime(2024, 6, 16, 1, 45, 24, 524, DateTimeKind.Local).AddTicks(8339),
                            Naam = "Nihil aliquam quis vero consequatur unde eum maiores vel officia voluptas qui facilis eos eligendi velit vel minus ipsam repudiandae.",
                            OpleidingId = 13,
                            StudentenkaartId = 13
                        },
                        new
                        {
                            Id = 14,
                            Adres = "Brinkmarkt 632 III",
                            EMail = "omnis",
                            GeboorteDatum = new DateTime(2024, 9, 22, 13, 37, 24, 35, DateTimeKind.Local).AddTicks(1054),
                            Naam = "Maxime eligendi voluptatem omnis quae cupiditate dolor beatae rerum itaque eligendi expedita sed dignissimos fugiat dolorem consequuntur molestiae sed aspernatur.",
                            OpleidingId = 14,
                            StudentenkaartId = 14
                        },
                        new
                        {
                            Id = 15,
                            Adres = "Timkade 048",
                            EMail = "ab",
                            GeboorteDatum = new DateTime(2025, 3, 29, 17, 6, 27, 828, DateTimeKind.Local).AddTicks(2560),
                            Naam = "Ratione ad similique eum facilis molestiae modi saepe dicta et autem quaerat et cumque debitis aut asperiores tempore ut dolores.",
                            OpleidingId = 15,
                            StudentenkaartId = 15
                        },
                        new
                        {
                            Id = 16,
                            Adres = "Bramdijk 464a",
                            EMail = "tempore",
                            GeboorteDatum = new DateTime(2025, 2, 24, 6, 45, 35, 322, DateTimeKind.Local).AddTicks(7412),
                            Naam = "Similique enim incidunt voluptas sunt ab est expedita expedita eaque eum enim quidem dolore autem est iste debitis at doloremque.",
                            OpleidingId = 16,
                            StudentenkaartId = 16
                        },
                        new
                        {
                            Id = 17,
                            Adres = "Ruiterpark 27",
                            EMail = "est",
                            GeboorteDatum = new DateTime(2024, 9, 22, 11, 28, 48, 760, DateTimeKind.Local).AddTicks(9700),
                            Naam = "Qui minima molestiae perspiciatis dolorum aut sint animi cumque non dolor numquam accusamus eius sint eum quae omnis tenetur cum.",
                            OpleidingId = 17,
                            StudentenkaartId = 17
                        },
                        new
                        {
                            Id = 18,
                            Adres = "Meijerlaan 699 II",
                            EMail = "et",
                            GeboorteDatum = new DateTime(2025, 4, 6, 2, 58, 49, 616, DateTimeKind.Local).AddTicks(9993),
                            Naam = "Exercitationem reprehenderit a sapiente sit incidunt impedit molestias et voluptates tempora magnam sunt vero rerum ea officia ex recusandae eveniet.",
                            OpleidingId = 18,
                            StudentenkaartId = 18
                        },
                        new
                        {
                            Id = 19,
                            Adres = "Irislaan 54",
                            EMail = "sit",
                            GeboorteDatum = new DateTime(2024, 12, 12, 5, 55, 17, 881, DateTimeKind.Local).AddTicks(1896),
                            Naam = "Doloremque nihil sint dignissimos sit esse qui maiores earum doloribus quia aut culpa quam eos omnis dignissimos ipsa repellat quos.",
                            OpleidingId = 19,
                            StudentenkaartId = 19
                        },
                        new
                        {
                            Id = 20,
                            Adres = "Haangracht 549 I",
                            EMail = "soluta",
                            GeboorteDatum = new DateTime(2024, 12, 11, 0, 11, 42, 649, DateTimeKind.Local).AddTicks(1540),
                            Naam = "Dignissimos quo iste nihil non unde ratione aperiam iure consectetur ab placeat dolore sunt quos suscipit ut odit nostrum nihil.",
                            OpleidingId = 20,
                            StudentenkaartId = 20
                        });
                });

            modelBuilder.Entity("Simpleschool.Models.Opleiding", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BeschikbarePlaatsen")
                        .HasColumnType("int");

                    b.Property<string>("Beschrijving")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Duur")
                        .HasColumnType("int");

                    b.Property<string>("Naam")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Opleiding");

                    b.HasData(
                        new
                        {
                            Id = 11,
                            BeschikbarePlaatsen = 368,
                            Beschrijving = "Fugiat et hic sunt autem et ducimus id possimus illum quae dolores quod modi et assumenda temporibus voluptatem et ad.",
                            Duur = 4,
                            Naam = "Voluptas aliquam quia et omnis est nisi fugiat harum neque laudantium mollitia ad repellat molestiae veritatis illo autem iste ab."
                        },
                        new
                        {
                            Id = 12,
                            BeschikbarePlaatsen = 257,
                            Beschrijving = "Dignissimos qui voluptates ut expedita neque sed nesciunt et alias maxime ab maxime et delectus rerum totam ab exercitationem non.",
                            Duur = 4,
                            Naam = "Perferendis numquam id aperiam voluptatum earum atque voluptatem velit iusto blanditiis reiciendis porro omnis ut aliquam nihil minus possimus velit."
                        },
                        new
                        {
                            Id = 13,
                            BeschikbarePlaatsen = 341,
                            Beschrijving = "Placeat possimus quia sapiente tenetur odio quam quo reprehenderit ut vero aut nam similique est optio error corporis voluptates ullam.",
                            Duur = 4,
                            Naam = "Sed et ut consequatur voluptas in id et velit officiis vel molestiae repudiandae nemo iste laboriosam ut aut neque quis."
                        },
                        new
                        {
                            Id = 14,
                            BeschikbarePlaatsen = 363,
                            Beschrijving = "Est sunt voluptatum est est alias doloribus eius impedit eum ut consequatur cumque molestiae non nostrum dignissimos temporibus voluptas et.",
                            Duur = 3,
                            Naam = "Vero quas accusantium tempore vel sunt voluptas hic nisi quas impedit quia nisi temporibus velit provident et eos dolores cupiditate."
                        },
                        new
                        {
                            Id = 15,
                            BeschikbarePlaatsen = 366,
                            Beschrijving = "Temporibus corrupti quos perferendis ab voluptatibus qui et ad ab non nostrum voluptas et non explicabo ea totam nihil quod.",
                            Duur = 3,
                            Naam = "Quia optio a voluptatem inventore nisi et veritatis hic ea expedita non tempora magnam ipsa architecto accusantium atque nam numquam."
                        },
                        new
                        {
                            Id = 16,
                            BeschikbarePlaatsen = 231,
                            Beschrijving = "Repellendus laborum in doloremque enim culpa enim impedit rerum omnis ea dolorem ipsam voluptatem cumque exercitationem corporis quod reprehenderit nemo.",
                            Duur = 3,
                            Naam = "Omnis in labore in odit earum omnis ipsum corrupti quas sint quis nihil officiis natus laborum doloribus est et est."
                        },
                        new
                        {
                            Id = 17,
                            BeschikbarePlaatsen = 363,
                            Beschrijving = "Voluptatem eum atque doloribus optio quia non ad sint dolorem labore culpa omnis est rerum aliquam similique eligendi et est.",
                            Duur = 3,
                            Naam = "Vel consequatur sit ullam aliquid vel rerum eum sed ut id qui consequatur rem quibusdam fugiat fugiat iste eaque animi."
                        },
                        new
                        {
                            Id = 18,
                            BeschikbarePlaatsen = 200,
                            Beschrijving = "Iusto ea in magnam dolores tempora ipsam cum in et at omnis ut natus quia aut expedita at esse voluptatem.",
                            Duur = 4,
                            Naam = "Sed sit labore et saepe nam sed voluptatem nisi quia at delectus vel rerum tempora quae asperiores qui cum earum."
                        },
                        new
                        {
                            Id = 19,
                            BeschikbarePlaatsen = 358,
                            Beschrijving = "Ex ut sequi ut ut distinctio quia cumque unde deserunt mollitia ad incidunt facere reiciendis explicabo facere porro impedit reprehenderit.",
                            Duur = 3,
                            Naam = "Quia omnis minus impedit nihil vitae nulla eligendi aut optio dignissimos consequuntur quasi vel odio sunt ipsum quidem rerum aut."
                        },
                        new
                        {
                            Id = 20,
                            BeschikbarePlaatsen = 240,
                            Beschrijving = "Dolor alias iste totam qui et sint dolor id fugit rerum beatae consequatur quam fugiat incidunt et natus earum consequuntur.",
                            Duur = 4,
                            Naam = "Est aut et dignissimos praesentium ut est ea sit distinctio atque rerum dolorum sed ex aperiam quaerat voluptatibus libero eum."
                        });
                });

            modelBuilder.Entity("Simpleschool.Models.StudentenKaart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Klas")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Naam")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("School")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("StudentenKaart");

                    b.HasData(
                        new
                        {
                            Id = 11,
                            Klas = "aperiam",
                            Naam = "Msc Lennox Bakker",
                            School = "Klein, Wal and Groot"
                        },
                        new
                        {
                            Id = 12,
                            Klas = "non",
                            Naam = "Prof. Jorn Beek",
                            School = "Beek, Visser and Graaf"
                        },
                        new
                        {
                            Id = 13,
                            Klas = "excepturi",
                            Naam = "Msc Martin Bosch",
                            School = "Jong Bank"
                        },
                        new
                        {
                            Id = 14,
                            Klas = "sit",
                            Naam = "Bsc Elias Koster",
                            School = "Bruin, Ven and Bosch"
                        },
                        new
                        {
                            Id = 15,
                            Klas = "quia",
                            Naam = "Ezra Haan I",
                            School = "Klein, Bosch and Bos"
                        },
                        new
                        {
                            Id = 16,
                            Klas = "dignissimos",
                            Naam = "Eymen Dijkstra II",
                            School = "Peters, Ven and Mulder"
                        },
                        new
                        {
                            Id = 17,
                            Klas = "quo",
                            Naam = "Dhr. Kayleigh Graaf",
                            School = "Ven International"
                        },
                        new
                        {
                            Id = 18,
                            Klas = "qui",
                            Naam = "Bsc Muhammed Vries",
                            School = "Vermeulen - Dijkstra"
                        },
                        new
                        {
                            Id = 19,
                            Klas = "occaecati",
                            Naam = "Annemijn Bosch Jr.",
                            School = "Bakker - Wit"
                        },
                        new
                        {
                            Id = 20,
                            Klas = "ut",
                            Naam = "Julan Mulder III",
                            School = "Meijer - Vries"
                        });
                });

            modelBuilder.Entity("Simpleschool.Models.Vak", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AantalStudiePunten")
                        .HasColumnType("int");

                    b.Property<int>("LeerkrachtId")
                        .HasColumnType("int");

                    b.Property<string>("Naam")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Taal")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Vaktype")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LeerkrachtId");

                    b.ToTable("Vak");

                    b.HasData(
                        new
                        {
                            Id = 11,
                            AantalStudiePunten = 43,
                            LeerkrachtId = 11,
                            Naam = "Mevr. Dr. Jaivey Brouwer",
                            Taal = "transmit",
                            Vaktype = 1
                        },
                        new
                        {
                            Id = 12,
                            AantalStudiePunten = 19,
                            LeerkrachtId = 12,
                            Naam = "Fien Beek III",
                            Taal = "object-oriented",
                            Vaktype = 0
                        },
                        new
                        {
                            Id = 13,
                            AantalStudiePunten = 19,
                            LeerkrachtId = 13,
                            Naam = "Dirk Haan II",
                            Taal = "Egyptian Pound",
                            Vaktype = 1
                        },
                        new
                        {
                            Id = 14,
                            AantalStudiePunten = 14,
                            LeerkrachtId = 14,
                            Naam = "Msc Jesse Mulder",
                            Taal = "Fresh",
                            Vaktype = 0
                        },
                        new
                        {
                            Id = 15,
                            AantalStudiePunten = 34,
                            LeerkrachtId = 15,
                            Naam = "Prof. Meike Stichting",
                            Taal = "synthesize",
                            Vaktype = 0
                        },
                        new
                        {
                            Id = 16,
                            AantalStudiePunten = 24,
                            LeerkrachtId = 16,
                            Naam = "Florence Bos Jr.",
                            Taal = "cultivate",
                            Vaktype = 0
                        },
                        new
                        {
                            Id = 17,
                            AantalStudiePunten = 40,
                            LeerkrachtId = 17,
                            Naam = "Dhr. Kaylee Willems",
                            Taal = "Gorgeous Fresh Shirt",
                            Vaktype = 1
                        },
                        new
                        {
                            Id = 18,
                            AantalStudiePunten = 38,
                            LeerkrachtId = 18,
                            Naam = "Nienke Ruiter Sr.",
                            Taal = "Via",
                            Vaktype = 0
                        },
                        new
                        {
                            Id = 19,
                            AantalStudiePunten = 22,
                            LeerkrachtId = 19,
                            Naam = "Isra Janssen IV",
                            Taal = "cyan",
                            Vaktype = 1
                        },
                        new
                        {
                            Id = 20,
                            AantalStudiePunten = 36,
                            LeerkrachtId = 20,
                            Naam = "Isra Maas IV",
                            Taal = "Comoros",
                            Vaktype = 1
                        });
                });

            modelBuilder.Entity("OpleidingVak", b =>
                {
                    b.HasOne("Simpleschool.Models.Opleiding", null)
                        .WithMany()
                        .HasForeignKey("OpleidingenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Simpleschool.Models.Vak", null)
                        .WithMany()
                        .HasForeignKey("VakkenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Simpleschool.Models.Leerling", b =>
                {
                    b.HasOne("Simpleschool.Models.Opleiding", "Opleiding")
                        .WithMany("Leerlingen")
                        .HasForeignKey("OpleidingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Simpleschool.Models.StudentenKaart", "Studentenkaart")
                        .WithOne("Leerling")
                        .HasForeignKey("Simpleschool.Models.Leerling", "StudentenkaartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Opleiding");

                    b.Navigation("Studentenkaart");
                });

            modelBuilder.Entity("Simpleschool.Models.Vak", b =>
                {
                    b.HasOne("Simpleschool.Models.Leerkracht", "Leerkracht")
                        .WithMany("Vakken")
                        .HasForeignKey("LeerkrachtId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Leerkracht");
                });

            modelBuilder.Entity("Simpleschool.Models.Leerkracht", b =>
                {
                    b.Navigation("Vakken");
                });

            modelBuilder.Entity("Simpleschool.Models.Opleiding", b =>
                {
                    b.Navigation("Leerlingen");
                });

            modelBuilder.Entity("Simpleschool.Models.StudentenKaart", b =>
                {
                    b.Navigation("Leerling")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
