// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SimpleSchool.Data;

#nullable disable

namespace SimpleSchool.Migrations
{
    [DbContext(typeof(SimpleSchoolContext))]
    [Migration("20250516120344_fk toegevoegd")]
    partial class fktoegevoegd
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("OpleidingVak", b =>
                {
                    b.Property<int>("OpleidingenId")
                        .HasColumnType("int");

                    b.Property<int>("VakkenId")
                        .HasColumnType("int");

                    b.HasKey("OpleidingenId", "VakkenId");

                    b.HasIndex("VakkenId");

                    b.ToTable("Opleidingsvakken", (string)null);
                });

            modelBuilder.Entity("Simpleschool.Models.Leerkracht", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Adres")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EMail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("GeboorteDatum")
                        .HasColumnType("datetime2");

                    b.Property<string>("Naam")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Leerkracht");

                    b.HasData(
                        new
                        {
                            Id = 11,
                            Adres = "Kevinhof 13",
                            EMail = "laboriosam",
                            GeboorteDatum = new DateTime(2024, 9, 13, 8, 39, 35, 705, DateTimeKind.Local).AddTicks(942),
                            Naam = "Blanditiis nobis blanditiis nemo commodi quis a fugiat quis assumenda aperiam minus hic nihil eos sint voluptatum sint quia id."
                        },
                        new
                        {
                            Id = 12,
                            Adres = "Mikerijk 035b",
                            EMail = "laboriosam",
                            GeboorteDatum = new DateTime(2025, 2, 8, 18, 45, 25, 616, DateTimeKind.Local).AddTicks(1203),
                            Naam = "Commodi delectus odio labore voluptatem aut soluta aliquam labore dolor deserunt omnis cum eius quis similique quia provident architecto dolorem."
                        },
                        new
                        {
                            Id = 13,
                            Adres = "Thijspassage 7",
                            EMail = "sed",
                            GeboorteDatum = new DateTime(2024, 7, 30, 17, 2, 38, 936, DateTimeKind.Local).AddTicks(2955),
                            Naam = "Non possimus delectus voluptas soluta esse omnis vel suscipit aut reiciendis unde itaque totam eius et consectetur magni labore pariatur."
                        },
                        new
                        {
                            Id = 14,
                            Adres = "Lisaplantsoen 495b",
                            EMail = "deserunt",
                            GeboorteDatum = new DateTime(2025, 2, 16, 2, 53, 23, 988, DateTimeKind.Local).AddTicks(4615),
                            Naam = "Qui ratione vero autem est in quos et dolore aut libero et omnis excepturi quo eos facere architecto laborum aut."
                        },
                        new
                        {
                            Id = 15,
                            Adres = "Thomasvelt 072",
                            EMail = "quaerat",
                            GeboorteDatum = new DateTime(2024, 8, 18, 20, 42, 28, 498, DateTimeKind.Local).AddTicks(7461),
                            Naam = "Ut ut tempora incidunt assumenda tempore explicabo nostrum quaerat reprehenderit at aut magni assumenda aut sit vitae nihil quibusdam id."
                        },
                        new
                        {
                            Id = 16,
                            Adres = "Beekrijk 571b",
                            EMail = "quas",
                            GeboorteDatum = new DateTime(2024, 6, 29, 10, 36, 1, 45, DateTimeKind.Local).AddTicks(7621),
                            Naam = "Aut sint veritatis ad molestiae enim tenetur voluptatem ea nisi et nihil autem harum quos inventore ut est fugit quasi."
                        },
                        new
                        {
                            Id = 17,
                            Adres = "Boslaan 243b",
                            EMail = "repellendus",
                            GeboorteDatum = new DateTime(2025, 4, 13, 6, 0, 41, 350, DateTimeKind.Local).AddTicks(3224),
                            Naam = "Ex nulla eaque et atque sed dolore vel possimus consequuntur nobis error quam quia eaque et consequatur beatae quisquam vel."
                        },
                        new
                        {
                            Id = 18,
                            Adres = "Svenrijk 067 I",
                            EMail = "et",
                            GeboorteDatum = new DateTime(2024, 11, 11, 23, 8, 47, 854, DateTimeKind.Local).AddTicks(9648),
                            Naam = "Ex totam vero et at veritatis nulla sint deleniti fugiat porro velit culpa id a aut similique quidem qui mollitia."
                        },
                        new
                        {
                            Id = 19,
                            Adres = "Brittsteeg 1",
                            EMail = "iure",
                            GeboorteDatum = new DateTime(2025, 2, 25, 17, 39, 5, 715, DateTimeKind.Local).AddTicks(178),
                            Naam = "Praesentium adipisci est illum velit explicabo consequatur consequatur cum nulla enim illum nihil quos aut dolor modi eum dolor accusamus."
                        },
                        new
                        {
                            Id = 20,
                            Adres = "Janlaan 862 III",
                            EMail = "ut",
                            GeboorteDatum = new DateTime(2024, 10, 27, 8, 34, 27, 842, DateTimeKind.Local).AddTicks(8175),
                            Naam = "Accusantium sunt natus quos voluptas inventore temporibus eum voluptatem necessitatibus facilis vitae dignissimos nam harum porro vel quia sunt est."
                        });
                });

            modelBuilder.Entity("Simpleschool.Models.Leerling", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Adres")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EMail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("GeboorteDatum")
                        .HasColumnType("datetime2");

                    b.Property<string>("Naam")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OpleidingId")
                        .HasColumnType("int");

                    b.Property<int>("StudentenkaartId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OpleidingId");

                    b.HasIndex("StudentenkaartId")
                        .IsUnique();

                    b.ToTable("Leerling");

                    b.HasData(
                        new
                        {
                            Id = 11,
                            Adres = "Stijnkade 244 I",
                            EMail = "cumque",
                            GeboorteDatum = new DateTime(2024, 6, 25, 21, 27, 54, 764, DateTimeKind.Local).AddTicks(7218),
                            Naam = "Occaecati est quis et ipsum quo delectus assumenda eos debitis laudantium natus odit sed facilis sit minima et non ex.",
                            OpleidingId = 11,
                            StudentenkaartId = 11
                        },
                        new
                        {
                            Id = 12,
                            Adres = "Leeuwenrijk 032 III",
                            EMail = "ea",
                            GeboorteDatum = new DateTime(2025, 4, 28, 16, 41, 9, 31, DateTimeKind.Local).AddTicks(3063),
                            Naam = "Est deserunt rerum fuga reiciendis blanditiis est incidunt minima tenetur eveniet culpa autem a officiis aut cumque dolores est eos.",
                            OpleidingId = 12,
                            StudentenkaartId = 12
                        },
                        new
                        {
                            Id = 13,
                            Adres = "Nickrijk 169c",
                            EMail = "enim",
                            GeboorteDatum = new DateTime(2025, 3, 16, 18, 11, 42, 246, DateTimeKind.Local).AddTicks(416),
                            Naam = "Aliquid et beatae id aut quia consequatur et possimus alias rerum et nostrum excepturi nisi cum illo voluptas perferendis qui.",
                            OpleidingId = 13,
                            StudentenkaartId = 13
                        },
                        new
                        {
                            Id = 14,
                            Adres = "Visserplantsoen 401 I",
                            EMail = "est",
                            GeboorteDatum = new DateTime(2025, 1, 14, 7, 36, 25, 460, DateTimeKind.Local).AddTicks(7802),
                            Naam = "Accusantium omnis suscipit dolore quaerat commodi qui quibusdam dolor eligendi dolorem vitae placeat recusandae omnis cum accusamus quis voluptatem debitis.",
                            OpleidingId = 14,
                            StudentenkaartId = 14
                        },
                        new
                        {
                            Id = 15,
                            Adres = "Finnsloot 528 II",
                            EMail = "officia",
                            GeboorteDatum = new DateTime(2024, 10, 26, 8, 45, 36, 342, DateTimeKind.Local).AddTicks(4441),
                            Naam = "Unde quia delectus tenetur nostrum id inventore perferendis animi fugiat rerum sit qui sint facere qui fugit explicabo ducimus modi.",
                            OpleidingId = 15,
                            StudentenkaartId = 15
                        },
                        new
                        {
                            Id = 16,
                            Adres = "Noaplein 012a",
                            EMail = "dolorum",
                            GeboorteDatum = new DateTime(2024, 8, 20, 5, 12, 10, 565, DateTimeKind.Local).AddTicks(5882),
                            Naam = "Sit in non ipsum dolore quae cumque distinctio similique sed occaecati dolor id accusamus quas quia neque accusamus necessitatibus ullam.",
                            OpleidingId = 16,
                            StudentenkaartId = 16
                        },
                        new
                        {
                            Id = 17,
                            Adres = "Brittstraat 89",
                            EMail = "error",
                            GeboorteDatum = new DateTime(2024, 8, 24, 20, 1, 33, 622, DateTimeKind.Local).AddTicks(8637),
                            Naam = "Eveniet doloremque culpa dolorem id iure a nulla et placeat ea necessitatibus id amet reiciendis doloribus dolore temporibus amet ipsum.",
                            OpleidingId = 17,
                            StudentenkaartId = 17
                        },
                        new
                        {
                            Id = 18,
                            Adres = "Milanrijk 779 II",
                            EMail = "voluptatem",
                            GeboorteDatum = new DateTime(2024, 8, 6, 21, 28, 59, 141, DateTimeKind.Local).AddTicks(5190),
                            Naam = "Ut molestias adipisci delectus quas harum exercitationem eligendi qui recusandae dolorum quod et rerum aut quidem in omnis voluptatum et.",
                            OpleidingId = 18,
                            StudentenkaartId = 18
                        },
                        new
                        {
                            Id = 19,
                            Adres = "Mulderplantsoen 791c",
                            EMail = "est",
                            GeboorteDatum = new DateTime(2024, 10, 24, 17, 55, 7, 999, DateTimeKind.Local).AddTicks(1486),
                            Naam = "Minus aut ipsa aliquid magni et itaque adipisci deleniti eum id non excepturi quia voluptatem eveniet et excepturi eligendi ut.",
                            OpleidingId = 19,
                            StudentenkaartId = 19
                        },
                        new
                        {
                            Id = 20,
                            Adres = "Maudkade 579 III",
                            EMail = "non",
                            GeboorteDatum = new DateTime(2024, 8, 23, 23, 11, 54, 801, DateTimeKind.Local).AddTicks(159),
                            Naam = "Aut vel nihil inventore delectus accusantium animi et nemo ut illum ad similique voluptatem possimus et voluptatem sed atque dolore.",
                            OpleidingId = 20,
                            StudentenkaartId = 20
                        });
                });

            modelBuilder.Entity("Simpleschool.Models.Opleiding", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BeschikbarePlaatsen")
                        .HasColumnType("int");

                    b.Property<string>("Beschrijving")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Duur")
                        .HasColumnType("int");

                    b.Property<string>("Naam")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Opleiding");

                    b.HasData(
                        new
                        {
                            Id = 11,
                            BeschikbarePlaatsen = 248,
                            Beschrijving = "Possimus cumque ducimus qui ad ad et et unde aut quasi nobis doloribus quis sunt et porro alias omnis quisquam.",
                            Duur = 4,
                            Naam = "Facere at voluptas eveniet perspiciatis earum amet nihil quam voluptas aperiam autem repellendus consequatur enim quia sint nam ex quia."
                        },
                        new
                        {
                            Id = 12,
                            BeschikbarePlaatsen = 290,
                            Beschrijving = "Dolor temporibus qui autem sit error possimus corporis porro nulla est facere molestias est minus rerum dolor laudantium provident consequuntur.",
                            Duur = 4,
                            Naam = "Aspernatur quos perspiciatis aspernatur earum consequatur minus omnis qui similique est voluptatem ea officia nemo ut quisquam voluptatem esse sequi."
                        },
                        new
                        {
                            Id = 13,
                            BeschikbarePlaatsen = 256,
                            Beschrijving = "Odit doloribus sapiente quia minima laborum mollitia adipisci ab ut suscipit maiores quia aut ut laboriosam consequatur velit deserunt enim.",
                            Duur = 4,
                            Naam = "Qui non quibusdam reiciendis at quia porro doloremque omnis vel dolore rerum alias est et provident ea doloribus cupiditate consequatur."
                        },
                        new
                        {
                            Id = 14,
                            BeschikbarePlaatsen = 263,
                            Beschrijving = "Et esse et expedita earum praesentium iusto voluptatem qui cumque nisi voluptatem officiis fuga est at et animi repellat quisquam.",
                            Duur = 3,
                            Naam = "Magni quam aut quibusdam corrupti veritatis aut delectus nulla repellendus autem magni qui est sit iure qui et in autem."
                        },
                        new
                        {
                            Id = 15,
                            BeschikbarePlaatsen = 246,
                            Beschrijving = "Dolore repudiandae et cumque ut aut esse ut enim est corrupti eum debitis culpa illo maxime dolorem voluptatem illo ut.",
                            Duur = 3,
                            Naam = "Id porro doloribus ut quis corrupti sunt ipsum veritatis expedita exercitationem porro dolores quaerat nam suscipit optio voluptates tenetur nulla."
                        },
                        new
                        {
                            Id = 16,
                            BeschikbarePlaatsen = 351,
                            Beschrijving = "Fugiat rerum consequatur et officiis quia non nisi iusto eum ut nemo dicta accusamus nemo quidem expedita alias quaerat occaecati.",
                            Duur = 4,
                            Naam = "Eveniet consequatur voluptate iure rem sed ad et asperiores non repellendus neque vitae cum numquam corporis hic earum ducimus quia."
                        },
                        new
                        {
                            Id = 17,
                            BeschikbarePlaatsen = 249,
                            Beschrijving = "Quas non beatae quo accusantium omnis exercitationem non sint corrupti et officiis iure in hic in quia praesentium velit sint.",
                            Duur = 3,
                            Naam = "Quia veniam reiciendis reiciendis at adipisci est quidem et nostrum incidunt deserunt eos sit occaecati consectetur vero reiciendis debitis ad."
                        },
                        new
                        {
                            Id = 18,
                            BeschikbarePlaatsen = 369,
                            Beschrijving = "Rerum ut fuga neque alias alias dolores laudantium harum maiores ut eius harum laboriosam ipsam in cumque consectetur a natus.",
                            Duur = 3,
                            Naam = "Facere dolorem rerum cumque impedit adipisci unde magnam est odit voluptas architecto occaecati et molestiae porro amet odio harum quos."
                        },
                        new
                        {
                            Id = 19,
                            BeschikbarePlaatsen = 378,
                            Beschrijving = "Sed sit eum dolores autem consequuntur tempora occaecati mollitia enim architecto in illo veritatis possimus dicta similique vel qui architecto.",
                            Duur = 4,
                            Naam = "Fugit magni neque qui laborum autem aut odio laboriosam et est nobis commodi accusantium voluptate illum nihil officia eos debitis."
                        },
                        new
                        {
                            Id = 20,
                            BeschikbarePlaatsen = 285,
                            Beschrijving = "Accusantium et laboriosam occaecati eveniet tempore libero quia modi debitis provident doloribus aut distinctio corrupti est asperiores nihil alias beatae.",
                            Duur = 3,
                            Naam = "Quas ut sequi reiciendis sed atque numquam et eos aut ullam architecto tenetur ex consequatur ipsum similique est ut ratione."
                        });
                });

            modelBuilder.Entity("Simpleschool.Models.StudentenKaart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Klas")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Naam")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("School")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("StudentenKaart");

                    b.HasData(
                        new
                        {
                            Id = 11,
                            Klas = "quos",
                            Naam = "Harvey Dijkstra V",
                            School = "Meer, Smits and Vries"
                        },
                        new
                        {
                            Id = 12,
                            Klas = "quis",
                            Naam = "Mevr. Dr. Rayen Jansen",
                            School = "Maas - Veen"
                        },
                        new
                        {
                            Id = 13,
                            Klas = "explicabo",
                            Naam = "Prof. Guusje Brink",
                            School = "Koning, Wal and Leeuwen"
                        },
                        new
                        {
                            Id = 14,
                            Klas = "dolor",
                            Naam = "Mozes Smits II",
                            School = "Dijk - Dekker"
                        },
                        new
                        {
                            Id = 15,
                            Klas = "voluptatibus",
                            Naam = "Bsc Jana Meijer",
                            School = "Janssen, Wit and Ven"
                        },
                        new
                        {
                            Id = 16,
                            Klas = "voluptatum",
                            Naam = "Prof. Isabel Brouwer",
                            School = "Dijk en Zonen"
                        },
                        new
                        {
                            Id = 17,
                            Klas = "neque",
                            Naam = "Oliver Wal II",
                            School = "Vliet - Willems"
                        },
                        new
                        {
                            Id = 18,
                            Klas = "consequatur",
                            Naam = "Davi Leeuwen IV",
                            School = "Groot - Linden"
                        },
                        new
                        {
                            Id = 19,
                            Klas = "cum",
                            Naam = "Nico Beek IV",
                            School = "Leeuwen - Vos"
                        },
                        new
                        {
                            Id = 20,
                            Klas = "illo",
                            Naam = "Bsc Maes Hendriks",
                            School = "Vries, Jong and Mulder"
                        });
                });

            modelBuilder.Entity("Simpleschool.Models.Vak", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AantalStudiePunten")
                        .HasColumnType("int");

                    b.Property<int>("LeerkrachtId")
                        .HasColumnType("int");

                    b.Property<string>("Naam")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Taal")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Vaktype")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LeerkrachtId");

                    b.ToTable("Vak");

                    b.HasData(
                        new
                        {
                            Id = 11,
                            AantalStudiePunten = 37,
                            LeerkrachtId = 0,
                            Naam = "Msc Melisa Groot",
                            Taal = "deposit",
                            Vaktype = 0
                        },
                        new
                        {
                            Id = 12,
                            AantalStudiePunten = 45,
                            LeerkrachtId = 0,
                            Naam = "Linde Bruin V",
                            Taal = "Savings Account",
                            Vaktype = 0
                        },
                        new
                        {
                            Id = 13,
                            AantalStudiePunten = 36,
                            LeerkrachtId = 0,
                            Naam = "Dhr. Melody Veen",
                            Taal = "maroon",
                            Vaktype = 1
                        },
                        new
                        {
                            Id = 14,
                            AantalStudiePunten = 15,
                            LeerkrachtId = 0,
                            Naam = "Lina Wit III",
                            Taal = "UIC-Franc",
                            Vaktype = 1
                        },
                        new
                        {
                            Id = 15,
                            AantalStudiePunten = 47,
                            LeerkrachtId = 0,
                            Naam = "Mevr. Dr. Karlijn Brouwer",
                            Taal = "Practical Frozen Chair",
                            Vaktype = 1
                        },
                        new
                        {
                            Id = 16,
                            AantalStudiePunten = 47,
                            LeerkrachtId = 0,
                            Naam = "Mevr. Dr. Mahir Maas",
                            Taal = "Serbian Dinar",
                            Vaktype = 1
                        },
                        new
                        {
                            Id = 17,
                            AantalStudiePunten = 35,
                            LeerkrachtId = 0,
                            Naam = "Fayen Hendriks III",
                            Taal = "disintermediate",
                            Vaktype = 0
                        },
                        new
                        {
                            Id = 18,
                            AantalStudiePunten = 46,
                            LeerkrachtId = 0,
                            Naam = "Sanne Koning II",
                            Taal = "capacitor",
                            Vaktype = 0
                        },
                        new
                        {
                            Id = 19,
                            AantalStudiePunten = 21,
                            LeerkrachtId = 0,
                            Naam = "Msc Ayden Mulder",
                            Taal = "array",
                            Vaktype = 1
                        },
                        new
                        {
                            Id = 20,
                            AantalStudiePunten = 26,
                            LeerkrachtId = 0,
                            Naam = "Mevr. Dr. Ralph Kok",
                            Taal = "Unbranded",
                            Vaktype = 1
                        });
                });

            modelBuilder.Entity("OpleidingVak", b =>
                {
                    b.HasOne("Simpleschool.Models.Opleiding", null)
                        .WithMany()
                        .HasForeignKey("OpleidingenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Simpleschool.Models.Vak", null)
                        .WithMany()
                        .HasForeignKey("VakkenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Simpleschool.Models.Leerling", b =>
                {
                    b.HasOne("Simpleschool.Models.Opleiding", "Opleiding")
                        .WithMany("Leerlingen")
                        .HasForeignKey("OpleidingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Simpleschool.Models.StudentenKaart", "Studentenkaart")
                        .WithOne("Leerling")
                        .HasForeignKey("Simpleschool.Models.Leerling", "StudentenkaartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Opleiding");

                    b.Navigation("Studentenkaart");
                });

            modelBuilder.Entity("Simpleschool.Models.Vak", b =>
                {
                    b.HasOne("Simpleschool.Models.Leerkracht", "Leerkracht")
                        .WithMany("Vakken")
                        .HasForeignKey("LeerkrachtId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Leerkracht");
                });

            modelBuilder.Entity("Simpleschool.Models.Leerkracht", b =>
                {
                    b.Navigation("Vakken");
                });

            modelBuilder.Entity("Simpleschool.Models.Opleiding", b =>
                {
                    b.Navigation("Leerlingen");
                });

            modelBuilder.Entity("Simpleschool.Models.StudentenKaart", b =>
                {
                    b.Navigation("Leerling")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
