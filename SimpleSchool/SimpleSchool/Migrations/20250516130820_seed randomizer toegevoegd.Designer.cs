// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SimpleSchool.Data;

#nullable disable

namespace SimpleSchool.Migrations
{
    [DbContext(typeof(SimpleSchoolContext))]
    [Migration("20250516130820_seed randomizer toegevoegd")]
    partial class seedrandomizertoegevoegd
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("OpleidingVak", b =>
                {
                    b.Property<int>("OpleidingenId")
                        .HasColumnType("int");

                    b.Property<int>("VakkenId")
                        .HasColumnType("int");

                    b.HasKey("OpleidingenId", "VakkenId");

                    b.HasIndex("VakkenId");

                    b.ToTable("Opleidingsvakken", (string)null);
                });

            modelBuilder.Entity("Simpleschool.Models.Leerkracht", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Adres")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EMail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("GeboorteDatum")
                        .HasColumnType("datetime2");

                    b.Property<string>("Naam")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Leerkracht");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Adres = "Stichtinggracht 79",
                            EMail = "maiores",
                            GeboorteDatum = new DateTime(2024, 12, 6, 17, 49, 34, 724, DateTimeKind.Local).AddTicks(5972),
                            Naam = "Sunt at sed delectus voluptatibus reprehenderit ut suscipit nesciunt cupiditate recusandae voluptates tenetur sint repellat sed est autem autem laboriosam."
                        },
                        new
                        {
                            Id = 2,
                            Adres = "Roosdijk 3",
                            EMail = "suscipit",
                            GeboorteDatum = new DateTime(2024, 8, 23, 20, 26, 19, 841, DateTimeKind.Local).AddTicks(9946),
                            Naam = "Quis explicabo ea aspernatur non itaque debitis et velit et voluptatem quia assumenda iste in quis est dolore pariatur eos."
                        },
                        new
                        {
                            Id = 3,
                            Adres = "Graafvelt 949",
                            EMail = "perspiciatis",
                            GeboorteDatum = new DateTime(2024, 5, 30, 4, 48, 42, 633, DateTimeKind.Local).AddTicks(1492),
                            Naam = "Quis ipsum pariatur voluptatem voluptatum laboriosam officiis molestiae provident consequatur nihil culpa sed omnis non enim tempora numquam tempore et."
                        },
                        new
                        {
                            Id = 4,
                            Adres = "Hendriksmarkt 9",
                            EMail = "ut",
                            GeboorteDatum = new DateTime(2025, 2, 25, 20, 39, 43, 712, DateTimeKind.Local).AddTicks(2671),
                            Naam = "Laboriosam nihil fugiat natus minima accusantium numquam rerum facilis molestiae soluta ratione facere debitis qui enim sit quia aut ea."
                        },
                        new
                        {
                            Id = 5,
                            Adres = "Daanlaan 751 I",
                            EMail = "aut",
                            GeboorteDatum = new DateTime(2025, 4, 24, 15, 24, 42, 192, DateTimeKind.Local).AddTicks(7523),
                            Naam = "Voluptatibus qui quasi et repellat sunt totam quisquam maxime iste enim et explicabo laboriosam sunt et placeat illum temporibus tempora."
                        },
                        new
                        {
                            Id = 6,
                            Adres = "Vosplein 97",
                            EMail = "ut",
                            GeboorteDatum = new DateTime(2024, 6, 12, 20, 6, 51, 797, DateTimeKind.Local).AddTicks(8738),
                            Naam = "Quia qui a dolore ut dolorem ea omnis ratione dolor velit aut cupiditate praesentium ut nemo voluptatem debitis ut et."
                        },
                        new
                        {
                            Id = 7,
                            Adres = "Meijerweg 413 I",
                            EMail = "consequatur",
                            GeboorteDatum = new DateTime(2024, 7, 14, 7, 30, 21, 993, DateTimeKind.Local).AddTicks(4095),
                            Naam = "Non fugiat libero neque qui aliquid qui ut pariatur iusto maxime rerum maiores libero est vel a corrupti quia consectetur."
                        },
                        new
                        {
                            Id = 8,
                            Adres = "Vriesgracht 853 III",
                            EMail = "corrupti",
                            GeboorteDatum = new DateTime(2024, 6, 3, 15, 15, 36, 250, DateTimeKind.Local).AddTicks(2788),
                            Naam = "Non rerum eum maiores eius ut maxime earum itaque aut vitae voluptas esse odio modi voluptatem itaque accusamus molestiae accusantium."
                        },
                        new
                        {
                            Id = 9,
                            Adres = "Johanneskade 500c",
                            EMail = "quibusdam",
                            GeboorteDatum = new DateTime(2025, 1, 28, 13, 54, 13, 720, DateTimeKind.Local).AddTicks(4355),
                            Naam = "Nobis ea nihil molestias molestias odit et alias qui voluptatem quasi sit unde et odit architecto reprehenderit quam id harum."
                        },
                        new
                        {
                            Id = 10,
                            Adres = "Berghof 310a",
                            EMail = "omnis",
                            GeboorteDatum = new DateTime(2024, 8, 23, 11, 21, 52, 247, DateTimeKind.Local).AddTicks(6453),
                            Naam = "Quis et et qui molestiae soluta laboriosam et recusandae sed occaecati recusandae quam neque a recusandae itaque earum cum eos."
                        });
                });

            modelBuilder.Entity("Simpleschool.Models.Leerling", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Adres")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EMail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("GeboorteDatum")
                        .HasColumnType("datetime2");

                    b.Property<string>("Naam")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OpleidingId")
                        .HasColumnType("int");

                    b.Property<int>("StudentenkaartId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OpleidingId");

                    b.HasIndex("StudentenkaartId")
                        .IsUnique();

                    b.ToTable("Leerling");

                    b.HasData(
                        new
                        {
                            Id = 11,
                            Adres = "Anneplantsoen 431a",
                            EMail = "consequatur",
                            GeboorteDatum = new DateTime(2024, 8, 28, 10, 28, 38, 191, DateTimeKind.Local).AddTicks(301),
                            Naam = "Voluptatem velit dolorem rerum fuga perferendis dolore tempora quia qui hic sed aut hic animi reprehenderit in nisi ab optio.",
                            OpleidingId = 11,
                            StudentenkaartId = 11
                        },
                        new
                        {
                            Id = 12,
                            Adres = "Semweg 883a",
                            EMail = "debitis",
                            GeboorteDatum = new DateTime(2024, 12, 19, 18, 0, 34, 892, DateTimeKind.Local).AddTicks(7059),
                            Naam = "Et eius error qui sed natus sed rem quis neque perferendis excepturi vel ex tempora quia et laborum nostrum quasi.",
                            OpleidingId = 12,
                            StudentenkaartId = 12
                        },
                        new
                        {
                            Id = 13,
                            Adres = "Ricksteeg 239b",
                            EMail = "maxime",
                            GeboorteDatum = new DateTime(2024, 10, 8, 13, 30, 31, 74, DateTimeKind.Local).AddTicks(1159),
                            Naam = "Expedita autem debitis maiores quia qui iste a maxime eaque consectetur non aut necessitatibus nobis sed et soluta odit voluptas.",
                            OpleidingId = 13,
                            StudentenkaartId = 13
                        },
                        new
                        {
                            Id = 14,
                            Adres = "Rubenhof 628c",
                            EMail = "eligendi",
                            GeboorteDatum = new DateTime(2024, 8, 4, 11, 30, 38, 956, DateTimeKind.Local).AddTicks(2314),
                            Naam = "Amet quis sunt alias quas eius harum reprehenderit ratione dolores est optio et magnam aut voluptatum et aut fuga fuga.",
                            OpleidingId = 14,
                            StudentenkaartId = 14
                        },
                        new
                        {
                            Id = 15,
                            Adres = "Dampark 525c",
                            EMail = "error",
                            GeboorteDatum = new DateTime(2024, 11, 29, 21, 1, 43, 945, DateTimeKind.Local).AddTicks(2665),
                            Naam = "Veniam ullam rerum possimus at qui ea ut iure laudantium similique eaque provident est consectetur voluptates aut sint qui quaerat.",
                            OpleidingId = 15,
                            StudentenkaartId = 15
                        },
                        new
                        {
                            Id = 16,
                            Adres = "Hoekplein 953 I",
                            EMail = "impedit",
                            GeboorteDatum = new DateTime(2025, 5, 4, 19, 28, 49, 171, DateTimeKind.Local).AddTicks(9862),
                            Naam = "Deserunt aperiam qui corporis non aliquid illo odit qui veritatis sed recusandae dolores nesciunt illo maxime nesciunt sed accusamus vero.",
                            OpleidingId = 16,
                            StudentenkaartId = 16
                        },
                        new
                        {
                            Id = 17,
                            Adres = "Lucashof 194 II",
                            EMail = "non",
                            GeboorteDatum = new DateTime(2025, 1, 13, 18, 27, 6, 345, DateTimeKind.Local).AddTicks(4608),
                            Naam = "Dolor pariatur id autem officiis sed saepe tempora in voluptas vero est occaecati suscipit eos cupiditate quasi voluptatum quidem laudantium.",
                            OpleidingId = 17,
                            StudentenkaartId = 17
                        },
                        new
                        {
                            Id = 18,
                            Adres = "Annavelt 32",
                            EMail = "adipisci",
                            GeboorteDatum = new DateTime(2024, 9, 21, 17, 29, 30, 823, DateTimeKind.Local).AddTicks(6058),
                            Naam = "Soluta aut iste eaque rerum enim adipisci cumque quis occaecati pariatur non quisquam doloremque alias quaerat consectetur accusamus at vero.",
                            OpleidingId = 18,
                            StudentenkaartId = 18
                        },
                        new
                        {
                            Id = 19,
                            Adres = "Anoukmarkt 740b",
                            EMail = "optio",
                            GeboorteDatum = new DateTime(2025, 1, 27, 0, 11, 30, 800, DateTimeKind.Local).AddTicks(707),
                            Naam = "Maiores impedit maxime nemo et nesciunt facere numquam atque qui et voluptas consequatur amet sed et voluptate aut est autem.",
                            OpleidingId = 19,
                            StudentenkaartId = 19
                        },
                        new
                        {
                            Id = 20,
                            Adres = "Vriesplantsoen 420 I",
                            EMail = "voluptas",
                            GeboorteDatum = new DateTime(2024, 10, 4, 2, 28, 28, 413, DateTimeKind.Local).AddTicks(3328),
                            Naam = "Ut veritatis quo laudantium ullam consequatur odit dolorum illum accusamus dolore ipsa nihil quam maiores non minima consequatur velit totam.",
                            OpleidingId = 20,
                            StudentenkaartId = 20
                        });
                });

            modelBuilder.Entity("Simpleschool.Models.Opleiding", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BeschikbarePlaatsen")
                        .HasColumnType("int");

                    b.Property<string>("Beschrijving")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Duur")
                        .HasColumnType("int");

                    b.Property<string>("Naam")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Opleiding");

                    b.HasData(
                        new
                        {
                            Id = 11,
                            BeschikbarePlaatsen = 304,
                            Beschrijving = "Dolor in voluptas id aut cupiditate tenetur iure officia a minima aut dolor eos ab rerum ratione molestiae minima aut.",
                            Duur = 4,
                            Naam = "Consequatur incidunt facilis odit nihil et quia perferendis quisquam unde debitis aut quia enim qui est nobis et quis minus."
                        },
                        new
                        {
                            Id = 12,
                            BeschikbarePlaatsen = 266,
                            Beschrijving = "A et minus aspernatur magni soluta rerum id ex commodi blanditiis soluta iure voluptatem et vel enim voluptatem sit maxime.",
                            Duur = 3,
                            Naam = "Magni nesciunt delectus excepturi laudantium tenetur adipisci quia rerum nam sunt aut minus corrupti ab dolore omnis est rerum et."
                        },
                        new
                        {
                            Id = 13,
                            BeschikbarePlaatsen = 229,
                            Beschrijving = "Nemo qui expedita ab aspernatur accusantium vel sapiente esse dolorum totam ipsam eum doloremque illo similique porro iusto deserunt quo.",
                            Duur = 4,
                            Naam = "Quas molestiae accusamus dolorem vel eligendi sunt et ipsum blanditiis veniam deleniti repudiandae quibusdam velit quae omnis consequatur qui excepturi."
                        },
                        new
                        {
                            Id = 14,
                            BeschikbarePlaatsen = 241,
                            Beschrijving = "Eaque nam aut animi ut ipsum asperiores non est eum et minus culpa voluptate est soluta veniam molestias sed molestiae.",
                            Duur = 4,
                            Naam = "Similique ut beatae aut voluptas officia qui eum aperiam et velit illum quia ex et qui molestias voluptas deserunt veritatis."
                        },
                        new
                        {
                            Id = 15,
                            BeschikbarePlaatsen = 365,
                            Beschrijving = "Quaerat illum eveniet dignissimos omnis non dolores eum quae dicta vero natus minima provident dolore commodi blanditiis et facere vitae.",
                            Duur = 3,
                            Naam = "Molestiae molestias quam est qui rem esse repudiandae inventore reprehenderit nulla provident pariatur commodi eos esse sapiente dolorem dolorum et."
                        },
                        new
                        {
                            Id = 16,
                            BeschikbarePlaatsen = 246,
                            Beschrijving = "Nisi possimus tempore quis vitae sit ipsum animi impedit quia eveniet enim tempore alias ad molestias natus iste distinctio voluptatem.",
                            Duur = 3,
                            Naam = "Voluptatem quaerat ut reprehenderit rerum eius unde incidunt porro fugit necessitatibus omnis eaque aut dolore animi placeat cumque eligendi quia."
                        },
                        new
                        {
                            Id = 17,
                            BeschikbarePlaatsen = 223,
                            Beschrijving = "Ea assumenda et est et dolore voluptas et eos dolores perspiciatis sequi quia esse error commodi voluptas voluptates ab cupiditate.",
                            Duur = 3,
                            Naam = "Aut non adipisci nemo cupiditate quia veniam facilis laborum possimus aut unde nam sint repudiandae dolor porro mollitia dolores numquam."
                        },
                        new
                        {
                            Id = 18,
                            BeschikbarePlaatsen = 274,
                            Beschrijving = "Et libero consequatur molestias quibusdam et eius aliquid eum tempora dolorem sed consequuntur qui qui ullam beatae cum nesciunt fugiat.",
                            Duur = 3,
                            Naam = "Doloribus tenetur ipsam aliquid est facere sunt quos autem delectus nihil dignissimos sed asperiores cupiditate molestiae expedita quibusdam maxime aperiam."
                        },
                        new
                        {
                            Id = 19,
                            BeschikbarePlaatsen = 288,
                            Beschrijving = "Dolores adipisci minima libero et quasi aut ex quisquam quasi debitis deleniti et odio tenetur et iste libero est vitae.",
                            Duur = 3,
                            Naam = "Ducimus quia quo aspernatur hic magni necessitatibus dolores impedit ut neque perferendis non et suscipit est ut eos a deserunt."
                        },
                        new
                        {
                            Id = 20,
                            BeschikbarePlaatsen = 270,
                            Beschrijving = "Magnam explicabo dolores qui optio saepe eligendi odio qui nostrum voluptatibus consectetur quibusdam ad dolores quia laboriosam ex tenetur ipsum.",
                            Duur = 3,
                            Naam = "Facilis eos veritatis sequi voluptas molestias sed aut tenetur itaque quisquam similique error aut ipsa sint qui veniam voluptatem illum."
                        });
                });

            modelBuilder.Entity("Simpleschool.Models.StudentenKaart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Klas")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Naam")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("School")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("StudentenKaart");

                    b.HasData(
                        new
                        {
                            Id = 11,
                            Klas = "nemo",
                            Naam = "Mevr. Dr. Noor Smit",
                            School = "Klein, Vos and Vliet"
                        },
                        new
                        {
                            Id = 12,
                            Klas = "enim",
                            Naam = "Emilia Wit Jr.",
                            School = "Wit Group"
                        },
                        new
                        {
                            Id = 13,
                            Klas = "pariatur",
                            Naam = "Amina Klein Jr.",
                            School = "Hoek - Jong"
                        },
                        new
                        {
                            Id = 14,
                            Klas = "ut",
                            Naam = "Sanna Berg I",
                            School = "Dam, Dijkstra and Groot"
                        },
                        new
                        {
                            Id = 15,
                            Klas = "eos",
                            Naam = "Dhr. Valentino Beek",
                            School = "Wal, Ven and Vermeulen"
                        },
                        new
                        {
                            Id = 16,
                            Klas = "minus",
                            Naam = "Dhr. Pleun Groot",
                            School = "Klein, Bruin and Hoek"
                        },
                        new
                        {
                            Id = 17,
                            Klas = "ut",
                            Naam = "Kyan Haan I",
                            School = "Dijk, Vermeulen and Jacobs"
                        },
                        new
                        {
                            Id = 18,
                            Klas = "consequatur",
                            Naam = "Puck Wal I",
                            School = "Kok B.V."
                        },
                        new
                        {
                            Id = 19,
                            Klas = "cupiditate",
                            Naam = "Jaelynn Leeuwen III",
                            School = "Vermeulen, Ruiter and Vermeulen"
                        },
                        new
                        {
                            Id = 20,
                            Klas = "reprehenderit",
                            Naam = "Skye Bakker II",
                            School = "Heuvel Maatschappij"
                        });
                });

            modelBuilder.Entity("Simpleschool.Models.Vak", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AantalStudiePunten")
                        .HasColumnType("int");

                    b.Property<int>("LeerkrachtId")
                        .HasColumnType("int");

                    b.Property<string>("Naam")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Taal")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Vaktype")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LeerkrachtId");

                    b.ToTable("Vak");

                    b.HasData(
                        new
                        {
                            Id = 11,
                            AantalStudiePunten = 47,
                            LeerkrachtId = 11,
                            Naam = "Prof. Lex Hendriks",
                            Taal = "Club",
                            Vaktype = 0
                        },
                        new
                        {
                            Id = 12,
                            AantalStudiePunten = 35,
                            LeerkrachtId = 12,
                            Naam = "Mehmet Stichting I",
                            Taal = "Jewelery & Electronics",
                            Vaktype = 1
                        },
                        new
                        {
                            Id = 13,
                            AantalStudiePunten = 25,
                            LeerkrachtId = 13,
                            Naam = "Bsc Maurits Hendriks",
                            Taal = "navigate",
                            Vaktype = 0
                        },
                        new
                        {
                            Id = 14,
                            AantalStudiePunten = 48,
                            LeerkrachtId = 14,
                            Naam = "Isa Vos V",
                            Taal = "transmitter",
                            Vaktype = 0
                        },
                        new
                        {
                            Id = 15,
                            AantalStudiePunten = 22,
                            LeerkrachtId = 15,
                            Naam = "Mevr. Dr. Emilia Klein",
                            Taal = "black",
                            Vaktype = 1
                        },
                        new
                        {
                            Id = 16,
                            AantalStudiePunten = 32,
                            LeerkrachtId = 16,
                            Naam = "Msc Isabelle Brouwer",
                            Taal = "Unbranded Cotton Sausages",
                            Vaktype = 1
                        },
                        new
                        {
                            Id = 17,
                            AantalStudiePunten = 25,
                            LeerkrachtId = 17,
                            Naam = "Marley Peters Jr.",
                            Taal = "Cambridgeshire",
                            Vaktype = 0
                        },
                        new
                        {
                            Id = 18,
                            AantalStudiePunten = 42,
                            LeerkrachtId = 18,
                            Naam = "Dhr. Aisha Broek",
                            Taal = "bus",
                            Vaktype = 0
                        },
                        new
                        {
                            Id = 19,
                            AantalStudiePunten = 39,
                            LeerkrachtId = 19,
                            Naam = "Dhr. Maes Koster",
                            Taal = "Persistent",
                            Vaktype = 0
                        },
                        new
                        {
                            Id = 20,
                            AantalStudiePunten = 11,
                            LeerkrachtId = 20,
                            Naam = "Kyano Brink Jr.",
                            Taal = "Gorgeous",
                            Vaktype = 1
                        });
                });

            modelBuilder.Entity("OpleidingVak", b =>
                {
                    b.HasOne("Simpleschool.Models.Opleiding", null)
                        .WithMany()
                        .HasForeignKey("OpleidingenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Simpleschool.Models.Vak", null)
                        .WithMany()
                        .HasForeignKey("VakkenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Simpleschool.Models.Leerling", b =>
                {
                    b.HasOne("Simpleschool.Models.Opleiding", "Opleiding")
                        .WithMany("Leerlingen")
                        .HasForeignKey("OpleidingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Simpleschool.Models.StudentenKaart", "Studentenkaart")
                        .WithOne("Leerling")
                        .HasForeignKey("Simpleschool.Models.Leerling", "StudentenkaartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Opleiding");

                    b.Navigation("Studentenkaart");
                });

            modelBuilder.Entity("Simpleschool.Models.Vak", b =>
                {
                    b.HasOne("Simpleschool.Models.Leerkracht", "Leerkracht")
                        .WithMany("Vakken")
                        .HasForeignKey("LeerkrachtId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Leerkracht");
                });

            modelBuilder.Entity("Simpleschool.Models.Leerkracht", b =>
                {
                    b.Navigation("Vakken");
                });

            modelBuilder.Entity("Simpleschool.Models.Opleiding", b =>
                {
                    b.Navigation("Leerlingen");
                });

            modelBuilder.Entity("Simpleschool.Models.StudentenKaart", b =>
                {
                    b.Navigation("Leerling")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
