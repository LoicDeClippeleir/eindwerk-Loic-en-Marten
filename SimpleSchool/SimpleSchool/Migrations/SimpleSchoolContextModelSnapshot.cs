// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SimpleSchool.Data;

#nullable disable

namespace SimpleSchool.Migrations
{
    [DbContext(typeof(SimpleSchoolContext))]
    partial class SimpleSchoolContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("OpleidingVak", b =>
                {
                    b.Property<int>("OpleidingenId")
                        .HasColumnType("int");

                    b.Property<int>("VakkenId")
                        .HasColumnType("int");

                    b.HasKey("OpleidingenId", "VakkenId");

                    b.HasIndex("VakkenId");

                    b.ToTable("Opleidingsvakken", (string)null);
                });

            modelBuilder.Entity("Simpleschool.Models.Leerkracht", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Adres")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EMail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("GeboorteDatum")
                        .HasColumnType("datetime2");

                    b.Property<string>("Naam")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Leerkracht");

                    b.HasData(
                        new
                        {
                            Id = 11,
                            Adres = "Maasplein 743a",
                            EMail = "ut",
                            GeboorteDatum = new DateTime(2025, 2, 17, 11, 23, 17, 48, DateTimeKind.Local).AddTicks(8983),
                            Naam = "A et quibusdam id iure maiores id vitae sint omnis cupiditate sunt ut distinctio ipsam sunt aut modi est omnis."
                        },
                        new
                        {
                            Id = 12,
                            Adres = "Maudsteeg 234a",
                            EMail = "et",
                            GeboorteDatum = new DateTime(2024, 8, 4, 10, 7, 43, 860, DateTimeKind.Local).AddTicks(2359),
                            Naam = "Nam quo labore officiis rerum minima ipsam praesentium voluptatibus non omnis voluptates iste dolores harum qui eius est quas est."
                        },
                        new
                        {
                            Id = 13,
                            Adres = "Brammarkt 320c",
                            EMail = "molestiae",
                            GeboorteDatum = new DateTime(2024, 11, 7, 19, 54, 1, 105, DateTimeKind.Local).AddTicks(4104),
                            Naam = "Exercitationem est fugit at harum dolorem qui dolorem et officia ipsam facere et magnam doloribus laboriosam molestiae dolorum laboriosam voluptas."
                        },
                        new
                        {
                            Id = 14,
                            Adres = "Nielsrijk 950 I",
                            EMail = "in",
                            GeboorteDatum = new DateTime(2025, 1, 16, 4, 24, 0, 338, DateTimeKind.Local).AddTicks(4637),
                            Naam = "Nobis totam qui maxime animi eos harum totam laborum excepturi ut necessitatibus voluptatem dolores nam incidunt hic optio quas esse."
                        },
                        new
                        {
                            Id = 15,
                            Adres = "Jessemarkt 309c",
                            EMail = "eos",
                            GeboorteDatum = new DateTime(2024, 7, 14, 9, 6, 9, 862, DateTimeKind.Local).AddTicks(176),
                            Naam = "Sit consequatur et aut sunt aut praesentium blanditiis voluptas voluptatum earum enim labore aut amet autem corrupti et id dicta."
                        },
                        new
                        {
                            Id = 16,
                            Adres = "Liekeplein 698b",
                            EMail = "magni",
                            GeboorteDatum = new DateTime(2025, 2, 6, 23, 48, 43, 955, DateTimeKind.Local).AddTicks(5846),
                            Naam = "Atque ut voluptatem voluptatem hic autem et sed sed a ducimus est qui doloribus aperiam nihil quae autem corrupti non."
                        },
                        new
                        {
                            Id = 17,
                            Adres = "Smitsdijk 9",
                            EMail = "laudantium",
                            GeboorteDatum = new DateTime(2024, 9, 23, 19, 52, 39, 616, DateTimeKind.Local).AddTicks(2307),
                            Naam = "Non voluptas labore voluptates omnis nemo id est sed velit sit ipsam explicabo quia asperiores qui porro voluptatum doloribus consequatur."
                        },
                        new
                        {
                            Id = 18,
                            Adres = "Boschmarkt 436c",
                            EMail = "in",
                            GeboorteDatum = new DateTime(2024, 12, 24, 9, 22, 52, 968, DateTimeKind.Local).AddTicks(90),
                            Naam = "Quia occaecati odit quod culpa reiciendis dolorem unde soluta voluptas voluptas deleniti voluptatem ea beatae ut harum est praesentium nesciunt."
                        },
                        new
                        {
                            Id = 19,
                            Adres = "Schoutenpark 550 II",
                            EMail = "non",
                            GeboorteDatum = new DateTime(2024, 12, 27, 5, 33, 26, 472, DateTimeKind.Local).AddTicks(6347),
                            Naam = "Possimus non adipisci molestiae iusto repellendus impedit sit eveniet omnis voluptatem voluptatum praesentium impedit iure itaque sunt maiores tenetur recusandae."
                        },
                        new
                        {
                            Id = 20,
                            Adres = "Hoekplein 760b",
                            EMail = "sint",
                            GeboorteDatum = new DateTime(2025, 4, 17, 10, 52, 20, 325, DateTimeKind.Local).AddTicks(7863),
                            Naam = "Error veniam voluptatem quis sed laborum laudantium veritatis commodi fugit facere maxime quae temporibus consectetur voluptatem ducimus officiis eum sapiente."
                        });
                });

            modelBuilder.Entity("Simpleschool.Models.Leerling", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Adres")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EMail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("GeboorteDatum")
                        .HasColumnType("datetime2");

                    b.Property<string>("Naam")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OpleidingId")
                        .HasColumnType("int");

                    b.Property<int>("StudentenkaartId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OpleidingId");

                    b.HasIndex("StudentenkaartId")
                        .IsUnique();

                    b.ToTable("Leerling");

                    b.HasData(
                        new
                        {
                            Id = 11,
                            Adres = "Vlietkade 78",
                            EMail = "quis",
                            GeboorteDatum = new DateTime(2024, 12, 29, 3, 30, 49, 351, DateTimeKind.Local).AddTicks(2293),
                            Naam = "Et id animi odit voluptates et sunt occaecati adipisci libero voluptas voluptatem enim asperiores ab voluptates quos quaerat earum quam.",
                            OpleidingId = 11,
                            StudentenkaartId = 11
                        },
                        new
                        {
                            Id = 12,
                            Adres = "Meijerhof 193a",
                            EMail = "dolorem",
                            GeboorteDatum = new DateTime(2024, 10, 4, 4, 54, 41, 471, DateTimeKind.Local).AddTicks(8339),
                            Naam = "Et nostrum et corrupti in distinctio impedit iste laborum voluptatum aliquid aperiam ut necessitatibus cupiditate molestias expedita aspernatur molestiae cupiditate.",
                            OpleidingId = 12,
                            StudentenkaartId = 12
                        },
                        new
                        {
                            Id = 13,
                            Adres = "Lotterijk 048a",
                            EMail = "aut",
                            GeboorteDatum = new DateTime(2024, 8, 27, 13, 37, 44, 292, DateTimeKind.Local).AddTicks(6017),
                            Naam = "Et voluptates officiis nihil quaerat consectetur non rerum fugit voluptatem nisi et soluta at atque ab eum et odio eos.",
                            OpleidingId = 13,
                            StudentenkaartId = 13
                        },
                        new
                        {
                            Id = 14,
                            Adres = "Lucaslaan 452a",
                            EMail = "commodi",
                            GeboorteDatum = new DateTime(2024, 6, 29, 20, 40, 19, 383, DateTimeKind.Local).AddTicks(10),
                            Naam = "Culpa cumque non provident eum quas cumque quasi ut repellendus architecto eum est commodi autem ut omnis quia quis hic.",
                            OpleidingId = 14,
                            StudentenkaartId = 14
                        },
                        new
                        {
                            Id = 15,
                            Adres = "Haanplein 413 II",
                            EMail = "enim",
                            GeboorteDatum = new DateTime(2024, 11, 27, 13, 47, 56, 771, DateTimeKind.Local).AddTicks(1252),
                            Naam = "Fugit deleniti laborum accusamus voluptatem molestiae eligendi qui omnis debitis blanditiis sunt consequatur ullam quae corrupti dolore sed illo est.",
                            OpleidingId = 15,
                            StudentenkaartId = 15
                        },
                        new
                        {
                            Id = 16,
                            Adres = "Luukplein 889c",
                            EMail = "et",
                            GeboorteDatum = new DateTime(2024, 6, 25, 11, 44, 50, 37, DateTimeKind.Local).AddTicks(6410),
                            Naam = "Ipsum aut ipsa maiores eos impedit nemo fugit sit dolores dicta libero qui a voluptas eum neque assumenda quae consequatur.",
                            OpleidingId = 16,
                            StudentenkaartId = 16
                        },
                        new
                        {
                            Id = 17,
                            Adres = "Lottedijk 624 I",
                            EMail = "optio",
                            GeboorteDatum = new DateTime(2025, 5, 3, 23, 56, 13, 188, DateTimeKind.Local).AddTicks(559),
                            Naam = "At possimus adipisci ipsam ut rerum possimus quod et impedit dolores est et et ab fugiat et quisquam consequatur et.",
                            OpleidingId = 17,
                            StudentenkaartId = 17
                        },
                        new
                        {
                            Id = 18,
                            Adres = "Rubensloot 669c",
                            EMail = "pariatur",
                            GeboorteDatum = new DateTime(2024, 10, 16, 19, 6, 13, 901, DateTimeKind.Local).AddTicks(4271),
                            Naam = "Ab aut laboriosam non blanditiis vero voluptas eum laborum rerum dolor nam ipsa autem dicta inventore in recusandae voluptates voluptatem.",
                            OpleidingId = 18,
                            StudentenkaartId = 18
                        },
                        new
                        {
                            Id = 19,
                            Adres = "Annaplein 585 III",
                            EMail = "maxime",
                            GeboorteDatum = new DateTime(2024, 11, 9, 20, 13, 9, 472, DateTimeKind.Local).AddTicks(4575),
                            Naam = "Non modi occaecati mollitia aspernatur quibusdam pariatur totam sit ipsam in alias qui ea dolorem qui et alias est voluptatum.",
                            OpleidingId = 19,
                            StudentenkaartId = 19
                        },
                        new
                        {
                            Id = 20,
                            Adres = "Britthof 257 I",
                            EMail = "labore",
                            GeboorteDatum = new DateTime(2024, 11, 9, 14, 47, 30, 485, DateTimeKind.Local).AddTicks(1654),
                            Naam = "Dolor nulla aut eos quia sapiente nulla at et possimus aspernatur necessitatibus et aspernatur eos qui amet sed inventore necessitatibus.",
                            OpleidingId = 20,
                            StudentenkaartId = 20
                        });
                });

            modelBuilder.Entity("Simpleschool.Models.Opleiding", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BeschikbarePlaatsen")
                        .HasColumnType("int");

                    b.Property<string>("Beschrijving")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Duur")
                        .HasColumnType("int");

                    b.Property<string>("Naam")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Opleiding");

                    b.HasData(
                        new
                        {
                            Id = 11,
                            BeschikbarePlaatsen = 390,
                            Beschrijving = "Incidunt consequatur ut cupiditate eius cupiditate voluptates sed suscipit officia incidunt corporis quo id neque debitis consequuntur doloremque velit magnam.",
                            Duur = 3,
                            Naam = "Voluptatem autem voluptatem quas non quis sunt consequatur libero et dolor aut fugit quibusdam ut in voluptas molestiae dicta praesentium."
                        },
                        new
                        {
                            Id = 12,
                            BeschikbarePlaatsen = 359,
                            Beschrijving = "Repudiandae fugiat molestias porro molestiae iure ratione consequatur itaque ratione laboriosam perferendis et et eaque repellat et pariatur tenetur dicta.",
                            Duur = 3,
                            Naam = "Assumenda quo dolores sint voluptate magnam porro et delectus enim porro quis facilis quia ut ut quo reprehenderit voluptas molestias."
                        },
                        new
                        {
                            Id = 13,
                            BeschikbarePlaatsen = 400,
                            Beschrijving = "Quidem accusantium aut amet consectetur autem sunt et et laboriosam veniam et sed doloribus quia omnis dolorem minus aut nisi.",
                            Duur = 3,
                            Naam = "Perferendis ratione animi rerum minima et dolores fugiat nemo perferendis ea ab rerum dolores et cum deleniti reiciendis facilis ad."
                        },
                        new
                        {
                            Id = 14,
                            BeschikbarePlaatsen = 377,
                            Beschrijving = "Ut qui similique distinctio sed et consectetur nesciunt animi quia neque consequatur labore ipsa autem reiciendis et et rerum ut.",
                            Duur = 4,
                            Naam = "Sed enim recusandae rerum quis reprehenderit facere aut possimus hic similique numquam autem ea provident repellendus alias et non nisi."
                        },
                        new
                        {
                            Id = 15,
                            BeschikbarePlaatsen = 372,
                            Beschrijving = "Et vel excepturi modi sunt et dolor minima non ratione a quo itaque possimus et repellendus rerum maxime ut tenetur.",
                            Duur = 4,
                            Naam = "Corporis quasi placeat magnam maxime eligendi velit numquam minus error ipsum quo architecto beatae hic aut fugiat quis nihil aperiam."
                        },
                        new
                        {
                            Id = 16,
                            BeschikbarePlaatsen = 368,
                            Beschrijving = "Tenetur unde sit veritatis corrupti qui dolorum dolor sint enim eum rerum quibusdam iusto voluptas possimus id vero molestiae itaque.",
                            Duur = 3,
                            Naam = "Omnis dolorem sequi fuga qui voluptatem aut laboriosam rerum aliquid soluta non animi qui a impedit laboriosam odio ullam maxime."
                        },
                        new
                        {
                            Id = 17,
                            BeschikbarePlaatsen = 261,
                            Beschrijving = "Quas dolor totam alias iure ullam cupiditate nesciunt quibusdam iure error sunt est sed voluptatum itaque voluptatem earum et facilis.",
                            Duur = 4,
                            Naam = "Ut eveniet unde eaque ratione omnis quia mollitia impedit perspiciatis vel voluptas fugit minus exercitationem alias cumque velit tenetur eligendi."
                        },
                        new
                        {
                            Id = 18,
                            BeschikbarePlaatsen = 266,
                            Beschrijving = "Doloremque rerum rerum voluptatem laudantium eos vero quidem possimus pariatur delectus enim officia tempora quasi enim quibusdam accusantium impedit culpa.",
                            Duur = 4,
                            Naam = "Aliquid molestiae magnam facilis quam rerum amet quae distinctio quia vitae doloremque tenetur eius illum officiis recusandae ut praesentium inventore."
                        },
                        new
                        {
                            Id = 19,
                            BeschikbarePlaatsen = 331,
                            Beschrijving = "Omnis aliquam consectetur consequuntur fuga pariatur vero reprehenderit dolores debitis a a voluptatibus eveniet omnis eaque dolores ab doloremque beatae.",
                            Duur = 4,
                            Naam = "Illum iste delectus voluptates consequatur soluta nam voluptatibus possimus totam laudantium sint dicta reprehenderit consequatur porro qui natus voluptate rerum."
                        },
                        new
                        {
                            Id = 20,
                            BeschikbarePlaatsen = 244,
                            Beschrijving = "Esse repellat est delectus quaerat id voluptas velit vero enim eius nemo debitis doloremque aut voluptatem voluptas eveniet dolor voluptatem.",
                            Duur = 4,
                            Naam = "Nemo est iure enim soluta omnis excepturi similique molestiae ratione consequuntur et suscipit odit aperiam in quia libero excepturi fugiat."
                        });
                });

            modelBuilder.Entity("Simpleschool.Models.StudentenKaart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Klas")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Naam")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("School")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("StudentenKaart");

                    b.HasData(
                        new
                        {
                            Id = 11,
                            Klas = "ad",
                            Naam = "Msc Maurits Beek",
                            School = "Ruiter - Beek"
                        },
                        new
                        {
                            Id = 12,
                            Klas = "doloribus",
                            Naam = "Dhr. Linn Heuvel",
                            School = "Smit ICT"
                        },
                        new
                        {
                            Id = 13,
                            Klas = "alias",
                            Naam = "Msc Collin Maas",
                            School = "Bosch, Smits and Veen"
                        },
                        new
                        {
                            Id = 14,
                            Klas = "dolorum",
                            Naam = "Hugo Wit V",
                            School = "Koning - Vliet"
                        },
                        new
                        {
                            Id = 15,
                            Klas = "aut",
                            Naam = "Elisa Bakker Sr.",
                            School = "Willems - Jacobs"
                        },
                        new
                        {
                            Id = 16,
                            Klas = "sit",
                            Naam = "Vera Beek I",
                            School = "Smits, Visser and Janssen"
                        },
                        new
                        {
                            Id = 17,
                            Klas = "omnis",
                            Naam = "Mevr. Dr. Lucie Ruiter",
                            School = "Hendriks - Smit"
                        },
                        new
                        {
                            Id = 18,
                            Klas = "doloremque",
                            Naam = "Ayman Stichting Jr.",
                            School = "Visser - Haan"
                        },
                        new
                        {
                            Id = 19,
                            Klas = "nobis",
                            Naam = "Mevr. Dr. Revi Dam",
                            School = "Jansen, Veen and Vos"
                        },
                        new
                        {
                            Id = 20,
                            Klas = "incidunt",
                            Naam = "Prof. Féline Graaf",
                            School = "Jansen B.V."
                        });
                });

            modelBuilder.Entity("Simpleschool.Models.Vak", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AantalStudiePunten")
                        .HasColumnType("int");

                    b.Property<int>("LeerkrachtId")
                        .HasColumnType("int");

                    b.Property<string>("Naam")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Taal")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Vaktype")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LeerkrachtId");

                    b.ToTable("Vak");

                    b.HasData(
                        new
                        {
                            Id = 11,
                            AantalStudiePunten = 20,
                            LeerkrachtId = 11,
                            Naam = "Prof. Safouane Vries",
                            Taal = "Leone",
                            Vaktype = 0
                        },
                        new
                        {
                            Id = 12,
                            AantalStudiePunten = 18,
                            LeerkrachtId = 12,
                            Naam = "Diede Mulder III",
                            Taal = "Borders",
                            Vaktype = 1
                        },
                        new
                        {
                            Id = 13,
                            AantalStudiePunten = 22,
                            LeerkrachtId = 13,
                            Naam = "Douwe Janssen IV",
                            Taal = "Auto Loan Account",
                            Vaktype = 1
                        },
                        new
                        {
                            Id = 14,
                            AantalStudiePunten = 35,
                            LeerkrachtId = 14,
                            Naam = "Isabeau Berg V",
                            Taal = "Ergonomic",
                            Vaktype = 0
                        },
                        new
                        {
                            Id = 15,
                            AantalStudiePunten = 14,
                            LeerkrachtId = 15,
                            Naam = "Bsc Lucy Jacobs",
                            Taal = "Village",
                            Vaktype = 1
                        },
                        new
                        {
                            Id = 16,
                            AantalStudiePunten = 45,
                            LeerkrachtId = 16,
                            Naam = "Jaxx Dam Sr.",
                            Taal = "Inlet",
                            Vaktype = 0
                        },
                        new
                        {
                            Id = 17,
                            AantalStudiePunten = 49,
                            LeerkrachtId = 17,
                            Naam = "Dhr. Idris Broek",
                            Taal = "strategic",
                            Vaktype = 0
                        },
                        new
                        {
                            Id = 18,
                            AantalStudiePunten = 18,
                            LeerkrachtId = 18,
                            Naam = "Bsc Kaylee Leeuwen",
                            Taal = "Berkshire",
                            Vaktype = 1
                        },
                        new
                        {
                            Id = 19,
                            AantalStudiePunten = 20,
                            LeerkrachtId = 19,
                            Naam = "Meyra Dekker Sr.",
                            Taal = "Open-source",
                            Vaktype = 0
                        },
                        new
                        {
                            Id = 20,
                            AantalStudiePunten = 45,
                            LeerkrachtId = 20,
                            Naam = "Dhr. Danilo Wit",
                            Taal = "Future",
                            Vaktype = 1
                        });
                });

            modelBuilder.Entity("OpleidingVak", b =>
                {
                    b.HasOne("Simpleschool.Models.Opleiding", null)
                        .WithMany()
                        .HasForeignKey("OpleidingenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Simpleschool.Models.Vak", null)
                        .WithMany()
                        .HasForeignKey("VakkenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Simpleschool.Models.Leerling", b =>
                {
                    b.HasOne("Simpleschool.Models.Opleiding", "Opleiding")
                        .WithMany("Leerlingen")
                        .HasForeignKey("OpleidingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Simpleschool.Models.StudentenKaart", "Studentenkaart")
                        .WithOne("Leerling")
                        .HasForeignKey("Simpleschool.Models.Leerling", "StudentenkaartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Opleiding");

                    b.Navigation("Studentenkaart");
                });

            modelBuilder.Entity("Simpleschool.Models.Vak", b =>
                {
                    b.HasOne("Simpleschool.Models.Leerkracht", "Leerkracht")
                        .WithMany("Vakken")
                        .HasForeignKey("LeerkrachtId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Leerkracht");
                });

            modelBuilder.Entity("Simpleschool.Models.Leerkracht", b =>
                {
                    b.Navigation("Vakken");
                });

            modelBuilder.Entity("Simpleschool.Models.Opleiding", b =>
                {
                    b.Navigation("Leerlingen");
                });

            modelBuilder.Entity("Simpleschool.Models.StudentenKaart", b =>
                {
                    b.Navigation("Leerling")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
