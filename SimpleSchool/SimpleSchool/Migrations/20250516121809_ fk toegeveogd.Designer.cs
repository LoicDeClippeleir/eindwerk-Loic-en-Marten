// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SimpleSchool.Data;

#nullable disable

namespace SimpleSchool.Migrations
{
    [DbContext(typeof(SimpleSchoolContext))]
    [Migration("20250516121809_ fk toegeveogd")]
    partial class fktoegeveogd
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("OpleidingVak", b =>
                {
                    b.Property<int>("OpleidingenId")
                        .HasColumnType("int");

                    b.Property<int>("VakkenId")
                        .HasColumnType("int");

                    b.HasKey("OpleidingenId", "VakkenId");

                    b.HasIndex("VakkenId");

                    b.ToTable("Opleidingsvakken", (string)null);
                });

            modelBuilder.Entity("Simpleschool.Models.Leerkracht", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Adres")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EMail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("GeboorteDatum")
                        .HasColumnType("datetime2");

                    b.Property<string>("Naam")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Leerkracht");

                    b.HasData(
                        new
                        {
                            Id = 11,
                            Adres = "Damplein 05",
                            EMail = "iste",
                            GeboorteDatum = new DateTime(2025, 1, 12, 15, 0, 10, 34, DateTimeKind.Local).AddTicks(5399),
                            Naam = "Porro itaque dolorem ex quod sit vitae debitis officiis quisquam velit atque ipsa enim quia aut rerum consectetur illo officiis."
                        },
                        new
                        {
                            Id = 12,
                            Adres = "Evapassage 523c",
                            EMail = "consectetur",
                            GeboorteDatum = new DateTime(2024, 6, 17, 10, 2, 36, 340, DateTimeKind.Local).AddTicks(8459),
                            Naam = "Architecto nulla dolore illo nostrum ea possimus occaecati tempore quaerat possimus sit quo quo eveniet facilis placeat quia ipsum aut."
                        },
                        new
                        {
                            Id = 13,
                            Adres = "Finndijk 823",
                            EMail = "cupiditate",
                            GeboorteDatum = new DateTime(2024, 7, 24, 7, 25, 57, 248, DateTimeKind.Local).AddTicks(8861),
                            Naam = "Consequatur aliquam accusamus quis atque tenetur consequatur et qui fuga velit non dolor nemo temporibus vel totam exercitationem eum laudantium."
                        },
                        new
                        {
                            Id = 14,
                            Adres = "Liekehof 00",
                            EMail = "in",
                            GeboorteDatum = new DateTime(2024, 7, 7, 21, 37, 40, 621, DateTimeKind.Local).AddTicks(853),
                            Naam = "Cum rerum totam voluptas distinctio eveniet recusandae molestiae repellat totam dignissimos veniam dolorem eos similique aut blanditiis atque saepe commodi."
                        },
                        new
                        {
                            Id = 15,
                            Adres = "Svenplantsoen 2",
                            EMail = "ullam",
                            GeboorteDatum = new DateTime(2024, 9, 30, 9, 17, 2, 601, DateTimeKind.Local).AddTicks(7814),
                            Naam = "Minus quia ipsam sunt est similique quibusdam eius qui ratione ut laborum molestiae est placeat at non illum qui eum."
                        },
                        new
                        {
                            Id = 16,
                            Adres = "Evamarkt 02",
                            EMail = "aperiam",
                            GeboorteDatum = new DateTime(2025, 2, 10, 13, 21, 11, 624, DateTimeKind.Local).AddTicks(6996),
                            Naam = "Quia impedit sint omnis fugiat assumenda hic beatae nihil facere commodi soluta perspiciatis atque pariatur veritatis et debitis ut hic."
                        },
                        new
                        {
                            Id = 17,
                            Adres = "Bossloot 318a",
                            EMail = "in",
                            GeboorteDatum = new DateTime(2024, 8, 13, 14, 27, 59, 169, DateTimeKind.Local).AddTicks(6475),
                            Naam = "Fuga maxime illum dicta quibusdam nesciunt asperiores ipsam iure quasi et quas eveniet vero et inventore explicabo dolor eveniet et."
                        },
                        new
                        {
                            Id = 18,
                            Adres = "Emmarijk 12",
                            EMail = "fugiat",
                            GeboorteDatum = new DateTime(2025, 1, 12, 22, 55, 43, 912, DateTimeKind.Local).AddTicks(8257),
                            Naam = "Veniam repellendus quibusdam consequatur occaecati reprehenderit adipisci sunt asperiores placeat eius fugit sit et voluptate ut placeat sit iure qui."
                        },
                        new
                        {
                            Id = 19,
                            Adres = "Maxkade 252a",
                            EMail = "voluptate",
                            GeboorteDatum = new DateTime(2025, 4, 29, 19, 33, 20, 657, DateTimeKind.Local).AddTicks(2990),
                            Naam = "Sunt laboriosam quia adipisci minus cumque facilis delectus nostrum minus accusamus molestiae voluptas enim dolores quia quasi deleniti aspernatur culpa."
                        },
                        new
                        {
                            Id = 20,
                            Adres = "Noapark 1",
                            EMail = "nobis",
                            GeboorteDatum = new DateTime(2024, 12, 5, 12, 35, 24, 91, DateTimeKind.Local).AddTicks(6219),
                            Naam = "Ut eius aut suscipit qui perspiciatis aliquam aut eos rerum eum ducimus voluptatem modi porro aut corporis tempora id rem."
                        });
                });

            modelBuilder.Entity("Simpleschool.Models.Leerling", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Adres")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EMail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("GeboorteDatum")
                        .HasColumnType("datetime2");

                    b.Property<string>("Naam")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OpleidingId")
                        .HasColumnType("int");

                    b.Property<int>("StudentenkaartId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OpleidingId");

                    b.HasIndex("StudentenkaartId")
                        .IsUnique();

                    b.ToTable("Leerling");

                    b.HasData(
                        new
                        {
                            Id = 11,
                            Adres = "Maudsteeg 53",
                            EMail = "delectus",
                            GeboorteDatum = new DateTime(2024, 6, 10, 5, 44, 59, 650, DateTimeKind.Local).AddTicks(9291),
                            Naam = "Impedit eaque ipsum odit amet eligendi laudantium ut delectus et sapiente laborum enim eius mollitia quasi ratione est dignissimos ullam.",
                            OpleidingId = 11,
                            StudentenkaartId = 11
                        },
                        new
                        {
                            Id = 12,
                            Adres = "Dijkstrastraat 9",
                            EMail = "quaerat",
                            GeboorteDatum = new DateTime(2025, 3, 16, 3, 22, 2, 814, DateTimeKind.Local).AddTicks(1354),
                            Naam = "Ut nesciunt possimus eveniet dolor deserunt quas ut aut quaerat sunt ipsa eum ut aut excepturi quisquam quod sed totam.",
                            OpleidingId = 12,
                            StudentenkaartId = 12
                        },
                        new
                        {
                            Id = 13,
                            Adres = "Nielskade 440 III",
                            EMail = "est",
                            GeboorteDatum = new DateTime(2025, 1, 31, 14, 44, 47, 764, DateTimeKind.Local).AddTicks(8742),
                            Naam = "Et numquam quisquam maxime culpa consequatur dolorem sunt ipsum odit quis neque incidunt in adipisci mollitia molestiae nisi vel omnis.",
                            OpleidingId = 13,
                            StudentenkaartId = 13
                        },
                        new
                        {
                            Id = 14,
                            Adres = "Isapassage 26",
                            EMail = "et",
                            GeboorteDatum = new DateTime(2024, 10, 28, 16, 25, 18, 450, DateTimeKind.Local).AddTicks(5580),
                            Naam = "Molestiae nobis laudantium consequatur ducimus aut dicta sunt aut facere cum quos fugit commodi beatae quis aut voluptatem aut vero.",
                            OpleidingId = 14,
                            StudentenkaartId = 14
                        },
                        new
                        {
                            Id = 15,
                            Adres = "Jaydenplein 395 III",
                            EMail = "incidunt",
                            GeboorteDatum = new DateTime(2024, 10, 30, 14, 15, 1, 907, DateTimeKind.Local).AddTicks(8898),
                            Naam = "Illum qui omnis ducimus tempora consectetur pariatur qui aut id molestiae et maiores aspernatur maxime illum nihil vel ea accusamus.",
                            OpleidingId = 15,
                            StudentenkaartId = 15
                        },
                        new
                        {
                            Id = 16,
                            Adres = "Juliasteeg 381",
                            EMail = "dolores",
                            GeboorteDatum = new DateTime(2025, 2, 25, 2, 9, 3, 834, DateTimeKind.Local).AddTicks(2697),
                            Naam = "Voluptates aliquam nemo itaque beatae laboriosam aliquid architecto sed voluptas quae soluta in ducimus qui fugit corrupti sed et officiis.",
                            OpleidingId = 16,
                            StudentenkaartId = 16
                        },
                        new
                        {
                            Id = 17,
                            Adres = "Johanneskade 500c",
                            EMail = "distinctio",
                            GeboorteDatum = new DateTime(2024, 11, 25, 18, 41, 7, 610, DateTimeKind.Local).AddTicks(9016),
                            Naam = "Harum fuga ea mollitia labore et ut saepe velit quia laudantium et nulla qui consectetur culpa quae eum et commodi.",
                            OpleidingId = 17,
                            StudentenkaartId = 17
                        },
                        new
                        {
                            Id = 18,
                            Adres = "Rubenstraat 764c",
                            EMail = "nisi",
                            GeboorteDatum = new DateTime(2024, 8, 29, 23, 25, 28, 671, DateTimeKind.Local).AddTicks(1628),
                            Naam = "Minima dolorem expedita dolorem nobis iure pariatur non quia distinctio quis dolorem natus quisquam aliquam fugit et praesentium libero deserunt.",
                            OpleidingId = 18,
                            StudentenkaartId = 18
                        },
                        new
                        {
                            Id = 19,
                            Adres = "Brouwersteeg 420 III",
                            EMail = "qui",
                            GeboorteDatum = new DateTime(2024, 9, 10, 22, 43, 51, 436, DateTimeKind.Local).AddTicks(8008),
                            Naam = "Perspiciatis veniam et ut consequatur molestiae rerum non enim ut est fuga natus fugit unde atque voluptas accusantium asperiores occaecati.",
                            OpleidingId = 19,
                            StudentenkaartId = 19
                        },
                        new
                        {
                            Id = 20,
                            Adres = "Maassteeg 706 II",
                            EMail = "illo",
                            GeboorteDatum = new DateTime(2025, 5, 2, 0, 48, 41, 932, DateTimeKind.Local).AddTicks(6935),
                            Naam = "Et commodi vel ea fugiat iure laboriosam illum minus et voluptas dolore vel assumenda sapiente id excepturi sed nobis dolores.",
                            OpleidingId = 20,
                            StudentenkaartId = 20
                        });
                });

            modelBuilder.Entity("Simpleschool.Models.Opleiding", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BeschikbarePlaatsen")
                        .HasColumnType("int");

                    b.Property<string>("Beschrijving")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Duur")
                        .HasColumnType("int");

                    b.Property<string>("Naam")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Opleiding");

                    b.HasData(
                        new
                        {
                            Id = 11,
                            BeschikbarePlaatsen = 207,
                            Beschrijving = "Laudantium ipsa quo est cupiditate autem officia sint ipsam facilis pariatur itaque corrupti voluptatum voluptas amet earum optio rerum sed.",
                            Duur = 3,
                            Naam = "Qui nobis unde commodi aut aut est non accusantium id laudantium qui sed minima mollitia similique minima molestiae iusto voluptatem."
                        },
                        new
                        {
                            Id = 12,
                            BeschikbarePlaatsen = 233,
                            Beschrijving = "Modi quam qui consequatur assumenda quo eum voluptatem ab tenetur aut modi molestiae impedit exercitationem recusandae quas in ut nulla.",
                            Duur = 4,
                            Naam = "Sit soluta quis omnis et magni ut eveniet corporis perspiciatis rerum neque deserunt molestiae iure quibusdam tenetur exercitationem officiis consequatur."
                        },
                        new
                        {
                            Id = 13,
                            BeschikbarePlaatsen = 298,
                            Beschrijving = "Esse saepe voluptatem accusamus repudiandae quis dolorem ducimus amet repellat est pariatur laborum et a provident deleniti suscipit omnis non.",
                            Duur = 3,
                            Naam = "Tenetur animi est et amet temporibus nesciunt nihil laboriosam ipsa omnis ullam qui minima expedita eum soluta similique quia facilis."
                        },
                        new
                        {
                            Id = 14,
                            BeschikbarePlaatsen = 346,
                            Beschrijving = "Quibusdam sit maxime esse porro consequuntur explicabo labore rerum accusantium aspernatur expedita consequatur pariatur quisquam totam laudantium aut id et.",
                            Duur = 3,
                            Naam = "Fugiat tempora accusamus reprehenderit itaque exercitationem qui iste ullam aliquid sit rerum ut iusto dolores fugiat animi amet vero rerum."
                        },
                        new
                        {
                            Id = 15,
                            BeschikbarePlaatsen = 313,
                            Beschrijving = "Nesciunt sit quas ducimus quaerat quo dolorum et aperiam velit nihil est deserunt quos iusto voluptatum occaecati aut sunt sapiente.",
                            Duur = 4,
                            Naam = "Soluta sunt quis autem eveniet delectus doloremque id consequuntur dolores ut ut eos consequatur quam asperiores saepe qui culpa officia."
                        },
                        new
                        {
                            Id = 16,
                            BeschikbarePlaatsen = 220,
                            Beschrijving = "Quaerat nesciunt cumque assumenda ipsum magni quas ducimus veniam velit numquam autem modi vel error reiciendis id laboriosam debitis enim.",
                            Duur = 3,
                            Naam = "Doloribus ea quidem quia sint aut tempora voluptatem nihil sit consequatur saepe quia minus adipisci omnis quia maiores quis mollitia."
                        },
                        new
                        {
                            Id = 17,
                            BeschikbarePlaatsen = 278,
                            Beschrijving = "Dignissimos dicta ut vel dignissimos quaerat excepturi praesentium aut reprehenderit minus ab aliquid amet ut qui consectetur laborum nostrum repellat.",
                            Duur = 4,
                            Naam = "Excepturi eum necessitatibus sint ut aut voluptatem quasi dolores ut ad blanditiis tenetur ut magnam totam eveniet rerum tenetur possimus."
                        },
                        new
                        {
                            Id = 18,
                            BeschikbarePlaatsen = 315,
                            Beschrijving = "Modi dolores est id vero beatae alias omnis cupiditate facilis doloremque exercitationem ipsam non quia rerum quaerat adipisci reprehenderit excepturi.",
                            Duur = 3,
                            Naam = "Fuga velit neque aperiam minus voluptas pariatur quaerat nulla quasi repellendus et similique qui excepturi quisquam esse non consectetur rem."
                        },
                        new
                        {
                            Id = 19,
                            BeschikbarePlaatsen = 255,
                            Beschrijving = "Maiores temporibus in officia rerum repellat magni harum veritatis quibusdam et quisquam illum nam dolor optio et quidem et sint.",
                            Duur = 3,
                            Naam = "Quasi modi autem aut aut qui ducimus maiores quisquam voluptatibus ut illum odit autem et explicabo aut nesciunt perferendis similique."
                        },
                        new
                        {
                            Id = 20,
                            BeschikbarePlaatsen = 207,
                            Beschrijving = "Nisi enim vero omnis qui necessitatibus quisquam rerum quos nemo delectus minus ipsum molestias nihil voluptatem eum dolorum sit et.",
                            Duur = 3,
                            Naam = "Et quae pariatur voluptas excepturi et vero voluptatem quos ut modi dicta nesciunt quibusdam amet blanditiis rem qui reiciendis rem."
                        });
                });

            modelBuilder.Entity("Simpleschool.Models.StudentenKaart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Klas")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Naam")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("School")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("StudentenKaart");

                    b.HasData(
                        new
                        {
                            Id = 11,
                            Klas = "sit",
                            Naam = "Yarah Hoek II",
                            School = "Berg - Boer"
                        },
                        new
                        {
                            Id = 12,
                            Klas = "et",
                            Naam = "Tessa Vermeulen II",
                            School = "Dijkstra, Linden and Beek"
                        },
                        new
                        {
                            Id = 13,
                            Klas = "commodi",
                            Naam = "Ilse Linden III",
                            School = "Schouten B.V."
                        },
                        new
                        {
                            Id = 14,
                            Klas = "et",
                            Naam = "Prof. Nikki Meer",
                            School = "Peters V.O.F."
                        },
                        new
                        {
                            Id = 15,
                            Klas = "autem",
                            Naam = "Lexi Hoek Jr.",
                            School = "Beek IT"
                        },
                        new
                        {
                            Id = 16,
                            Klas = "et",
                            Naam = "Josh Peters Sr.",
                            School = "Graaf - Haan"
                        },
                        new
                        {
                            Id = 17,
                            Klas = "dolores",
                            Naam = "Mevr. Dr. Bente Schouten",
                            School = "Willems - Berg"
                        },
                        new
                        {
                            Id = 18,
                            Klas = "consectetur",
                            Naam = "Yasin Kok III",
                            School = "Willems, Bosch and Willems"
                        },
                        new
                        {
                            Id = 19,
                            Klas = "autem",
                            Naam = "Matthew Stichting I",
                            School = "Jong, Koning and Dijk"
                        },
                        new
                        {
                            Id = 20,
                            Klas = "cum",
                            Naam = "Dhr. Joes Bakker",
                            School = "Vermeulen BV"
                        });
                });

            modelBuilder.Entity("Simpleschool.Models.Vak", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AantalStudiePunten")
                        .HasColumnType("int");

                    b.Property<int>("LeerkrachtId")
                        .HasColumnType("int");

                    b.Property<string>("Naam")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Taal")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Vaktype")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LeerkrachtId");

                    b.ToTable("Vak");

                    b.HasData(
                        new
                        {
                            Id = 11,
                            AantalStudiePunten = 38,
                            LeerkrachtId = 11,
                            Naam = "Tristan Stichting IV",
                            Taal = "Advanced",
                            Vaktype = 0
                        },
                        new
                        {
                            Id = 12,
                            AantalStudiePunten = 13,
                            LeerkrachtId = 12,
                            Naam = "Msc Sem Wit",
                            Taal = "Dynamic",
                            Vaktype = 1
                        },
                        new
                        {
                            Id = 13,
                            AantalStudiePunten = 47,
                            LeerkrachtId = 13,
                            Naam = "Prof. Riff Ruiter",
                            Taal = "synergy",
                            Vaktype = 0
                        },
                        new
                        {
                            Id = 14,
                            AantalStudiePunten = 12,
                            LeerkrachtId = 14,
                            Naam = "Shane Beek Jr.",
                            Taal = "Way",
                            Vaktype = 0
                        },
                        new
                        {
                            Id = 15,
                            AantalStudiePunten = 49,
                            LeerkrachtId = 15,
                            Naam = "Thijmen Vermeulen I",
                            Taal = "Corporate",
                            Vaktype = 0
                        },
                        new
                        {
                            Id = 16,
                            AantalStudiePunten = 28,
                            LeerkrachtId = 16,
                            Naam = "Juna Ruiter III",
                            Taal = "withdrawal",
                            Vaktype = 1
                        },
                        new
                        {
                            Id = 17,
                            AantalStudiePunten = 24,
                            LeerkrachtId = 17,
                            Naam = "Bsc Jake Veen",
                            Taal = "Fantastic Concrete Shirt",
                            Vaktype = 1
                        },
                        new
                        {
                            Id = 18,
                            AantalStudiePunten = 43,
                            LeerkrachtId = 18,
                            Naam = "Anna Peters IV",
                            Taal = "regional",
                            Vaktype = 1
                        },
                        new
                        {
                            Id = 19,
                            AantalStudiePunten = 40,
                            LeerkrachtId = 19,
                            Naam = "Mevr. Dr. Filip Ven",
                            Taal = "Cayman Islands Dollar",
                            Vaktype = 1
                        },
                        new
                        {
                            Id = 20,
                            AantalStudiePunten = 45,
                            LeerkrachtId = 20,
                            Naam = "Rana Bosch III",
                            Taal = "convergence",
                            Vaktype = 1
                        });
                });

            modelBuilder.Entity("OpleidingVak", b =>
                {
                    b.HasOne("Simpleschool.Models.Opleiding", null)
                        .WithMany()
                        .HasForeignKey("OpleidingenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Simpleschool.Models.Vak", null)
                        .WithMany()
                        .HasForeignKey("VakkenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Simpleschool.Models.Leerling", b =>
                {
                    b.HasOne("Simpleschool.Models.Opleiding", "Opleiding")
                        .WithMany("Leerlingen")
                        .HasForeignKey("OpleidingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Simpleschool.Models.StudentenKaart", "Studentenkaart")
                        .WithOne("Leerling")
                        .HasForeignKey("Simpleschool.Models.Leerling", "StudentenkaartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Opleiding");

                    b.Navigation("Studentenkaart");
                });

            modelBuilder.Entity("Simpleschool.Models.Vak", b =>
                {
                    b.HasOne("Simpleschool.Models.Leerkracht", "Leerkracht")
                        .WithMany("Vakken")
                        .HasForeignKey("LeerkrachtId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Leerkracht");
                });

            modelBuilder.Entity("Simpleschool.Models.Leerkracht", b =>
                {
                    b.Navigation("Vakken");
                });

            modelBuilder.Entity("Simpleschool.Models.Opleiding", b =>
                {
                    b.Navigation("Leerlingen");
                });

            modelBuilder.Entity("Simpleschool.Models.StudentenKaart", b =>
                {
                    b.Navigation("Leerling")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
