// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SimpleSchool.Data;

#nullable disable

namespace SimpleSchool.Migrations
{
    [DbContext(typeof(SimpleSchoolContext))]
    [Migration("20250516115754_initial")]
    partial class initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("OpleidingVak", b =>
                {
                    b.Property<int>("OpleidingenId")
                        .HasColumnType("int");

                    b.Property<int>("VakkenId")
                        .HasColumnType("int");

                    b.HasKey("OpleidingenId", "VakkenId");

                    b.HasIndex("VakkenId");

                    b.ToTable("Opleidingsvakken", (string)null);
                });

            modelBuilder.Entity("Simpleschool.Models.Leerkracht", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Adres")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EMail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("GeboorteDatum")
                        .HasColumnType("datetime2");

                    b.Property<string>("Naam")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Leerkracht");

                    b.HasData(
                        new
                        {
                            Id = 11,
                            Adres = "Vensloot 5",
                            EMail = "est",
                            GeboorteDatum = new DateTime(2025, 2, 22, 17, 46, 3, 5, DateTimeKind.Local).AddTicks(3465),
                            Naam = "Inventore esse saepe hic qui commodi velit reprehenderit sequi consectetur et odit enim sunt veniam voluptatem dolorem cupiditate quasi totam."
                        },
                        new
                        {
                            Id = 12,
                            Adres = "Noarijk 142c",
                            EMail = "ut",
                            GeboorteDatum = new DateTime(2024, 7, 2, 17, 18, 4, 394, DateTimeKind.Local).AddTicks(716),
                            Naam = "Vitae distinctio perspiciatis veritatis sed tempore et sint deserunt repellat qui sit aut voluptatem rerum facere aliquam dolorem a porro."
                        },
                        new
                        {
                            Id = 13,
                            Adres = "Vlietweg 097 II",
                            EMail = "eveniet",
                            GeboorteDatum = new DateTime(2024, 5, 30, 9, 15, 51, 398, DateTimeKind.Local).AddTicks(6709),
                            Naam = "Corrupti natus et dicta repellendus nesciunt autem laboriosam et possimus quis fuga aspernatur facere officiis nostrum porro voluptatem debitis aliquid."
                        },
                        new
                        {
                            Id = 14,
                            Adres = "Boerrijk 505b",
                            EMail = "sit",
                            GeboorteDatum = new DateTime(2024, 6, 24, 18, 54, 55, 347, DateTimeKind.Local).AddTicks(2178),
                            Naam = "Nisi expedita enim error voluptas repellat qui necessitatibus rem dolorem voluptates quis vel quibusdam cupiditate laudantium omnis rem asperiores distinctio."
                        },
                        new
                        {
                            Id = 15,
                            Adres = "Bergdijk 091b",
                            EMail = "ad",
                            GeboorteDatum = new DateTime(2024, 12, 7, 22, 17, 57, 776, DateTimeKind.Local).AddTicks(5480),
                            Naam = "Porro facilis ut in numquam et modi sit adipisci qui non amet ut ut totam accusantium rerum ut nostrum voluptatum."
                        },
                        new
                        {
                            Id = 16,
                            Adres = "Juliagracht 273c",
                            EMail = "est",
                            GeboorteDatum = new DateTime(2024, 7, 2, 18, 32, 46, 126, DateTimeKind.Local).AddTicks(4253),
                            Naam = "Nihil debitis molestias vero laboriosam ea qui sint provident nulla et pariatur quos quia doloribus cum maxime veritatis aut quibusdam."
                        },
                        new
                        {
                            Id = 17,
                            Adres = "Vrieskade 81",
                            EMail = "inventore",
                            GeboorteDatum = new DateTime(2024, 6, 25, 11, 17, 18, 251, DateTimeKind.Local).AddTicks(7207),
                            Naam = "Velit ipsum corrupti rerum facere non ab dolorem quia ea veritatis sint vero minus nesciunt quisquam hic minima architecto rerum."
                        },
                        new
                        {
                            Id = 18,
                            Adres = "Julianpark 408",
                            EMail = "aut",
                            GeboorteDatum = new DateTime(2025, 5, 5, 12, 30, 39, 723, DateTimeKind.Local).AddTicks(5948),
                            Naam = "Ratione et harum aut corrupti quis pariatur vel quaerat vitae et porro maiores voluptas exercitationem animi alias odit veniam quaerat."
                        },
                        new
                        {
                            Id = 19,
                            Adres = "Noaplein 7",
                            EMail = "repudiandae",
                            GeboorteDatum = new DateTime(2025, 2, 6, 2, 24, 46, 493, DateTimeKind.Local).AddTicks(3009),
                            Naam = "Pariatur labore nobis itaque vero qui sint eaque voluptatibus aliquid corrupti amet est quo repellendus modi consequatur aut voluptatem hic."
                        },
                        new
                        {
                            Id = 20,
                            Adres = "Beekstraat 095b",
                            EMail = "dolorem",
                            GeboorteDatum = new DateTime(2025, 5, 5, 7, 58, 36, 978, DateTimeKind.Local).AddTicks(154),
                            Naam = "Totam ipsam at sint fugiat non nesciunt perferendis blanditiis quis aliquid omnis consequatur voluptatem deserunt et et velit facilis hic."
                        });
                });

            modelBuilder.Entity("Simpleschool.Models.Leerling", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Adres")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EMail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("GeboorteDatum")
                        .HasColumnType("datetime2");

                    b.Property<string>("Naam")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OpleidingId")
                        .HasColumnType("int");

                    b.Property<int>("StudentenkaartId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OpleidingId");

                    b.HasIndex("StudentenkaartId")
                        .IsUnique();

                    b.ToTable("Leerling");

                    b.HasData(
                        new
                        {
                            Id = 11,
                            Adres = "Daanhof 833",
                            EMail = "magnam",
                            GeboorteDatum = new DateTime(2024, 12, 9, 4, 31, 41, 184, DateTimeKind.Local).AddTicks(4157),
                            Naam = "Corrupti eaque necessitatibus placeat doloremque mollitia vero sed cum vel itaque culpa modi id laborum aut dolores rerum cum doloribus.",
                            OpleidingId = 11,
                            StudentenkaartId = 11
                        },
                        new
                        {
                            Id = 12,
                            Adres = "Beeksloot 9",
                            EMail = "sed",
                            GeboorteDatum = new DateTime(2025, 3, 20, 18, 32, 27, 372, DateTimeKind.Local).AddTicks(464),
                            Naam = "Qui enim nemo quia et unde eaque consequatur ea ipsam aut molestiae sit et illum placeat in eaque inventore voluptas.",
                            OpleidingId = 12,
                            StudentenkaartId = 12
                        },
                        new
                        {
                            Id = 13,
                            Adres = "Lucasdijk 45",
                            EMail = "sit",
                            GeboorteDatum = new DateTime(2025, 4, 2, 15, 50, 39, 428, DateTimeKind.Local).AddTicks(5149),
                            Naam = "Non animi fugiat vero quas voluptatibus nulla quod culpa eos quia et aut a quia sunt velit ut magni itaque.",
                            OpleidingId = 13,
                            StudentenkaartId = 13
                        },
                        new
                        {
                            Id = 14,
                            Adres = "Vriesweg 264 III",
                            EMail = "placeat",
                            GeboorteDatum = new DateTime(2024, 12, 24, 22, 51, 12, 348, DateTimeKind.Local).AddTicks(4065),
                            Naam = "Commodi ut temporibus omnis vitae tenetur voluptatibus perspiciatis placeat voluptatum numquam in debitis in ut ea labore deleniti cum sint.",
                            OpleidingId = 14,
                            StudentenkaartId = 14
                        },
                        new
                        {
                            Id = 15,
                            Adres = "Bosrijk 978c",
                            EMail = "exercitationem",
                            GeboorteDatum = new DateTime(2024, 6, 14, 20, 13, 10, 693, DateTimeKind.Local).AddTicks(1530),
                            Naam = "Quia dolore molestiae iste mollitia velit quia sapiente aut quo fugiat vel magni sequi dignissimos dolorem assumenda in laudantium assumenda.",
                            OpleidingId = 15,
                            StudentenkaartId = 15
                        },
                        new
                        {
                            Id = 16,
                            Adres = "Bruingracht 050 II",
                            EMail = "ea",
                            GeboorteDatum = new DateTime(2025, 5, 16, 8, 53, 39, 698, DateTimeKind.Local).AddTicks(8917),
                            Naam = "Et laborum et aliquam et sit et voluptas consequatur praesentium et voluptates sunt placeat magnam cum eligendi vel autem facere.",
                            OpleidingId = 16,
                            StudentenkaartId = 16
                        },
                        new
                        {
                            Id = 17,
                            Adres = "Leeuwenhof 044 II",
                            EMail = "fuga",
                            GeboorteDatum = new DateTime(2024, 12, 16, 10, 56, 48, 766, DateTimeKind.Local).AddTicks(8871),
                            Naam = "Ipsam dicta temporibus natus similique consequuntur neque similique totam qui voluptatum fugiat sed ut omnis pariatur molestiae nihil adipisci illo.",
                            OpleidingId = 17,
                            StudentenkaartId = 17
                        },
                        new
                        {
                            Id = 18,
                            Adres = "Isadijk 201a",
                            EMail = "sunt",
                            GeboorteDatum = new DateTime(2025, 2, 16, 11, 5, 38, 889, DateTimeKind.Local).AddTicks(2140),
                            Naam = "Sit neque odit illo eum veniam qui voluptatem eum qui quasi sunt perspiciatis quod atque omnis est repellat illo sit.",
                            OpleidingId = 18,
                            StudentenkaartId = 18
                        },
                        new
                        {
                            Id = 19,
                            Adres = "Jacobsdijk 070 II",
                            EMail = "neque",
                            GeboorteDatum = new DateTime(2024, 7, 26, 7, 2, 19, 481, DateTimeKind.Local).AddTicks(8461),
                            Naam = "Qui eos facilis et dolores vitae tempore enim deleniti qui necessitatibus cum incidunt aut quo quam ratione qui sit quia.",
                            OpleidingId = 19,
                            StudentenkaartId = 19
                        },
                        new
                        {
                            Id = 20,
                            Adres = "Evaplantsoen 774 II",
                            EMail = "dolor",
                            GeboorteDatum = new DateTime(2024, 11, 2, 14, 22, 25, 365, DateTimeKind.Local).AddTicks(2884),
                            Naam = "Aspernatur nihil tenetur molestias cumque nulla eum consequatur et cupiditate provident sunt at doloribus et quia ducimus accusantium quia corrupti.",
                            OpleidingId = 20,
                            StudentenkaartId = 20
                        });
                });

            modelBuilder.Entity("Simpleschool.Models.Opleiding", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BeschikbarePlaatsen")
                        .HasColumnType("int");

                    b.Property<string>("Beschrijving")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Duur")
                        .HasColumnType("int");

                    b.Property<string>("Naam")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Opleiding");

                    b.HasData(
                        new
                        {
                            Id = 11,
                            BeschikbarePlaatsen = 372,
                            Beschrijving = "Aut qui reiciendis delectus dignissimos laboriosam omnis animi ipsa consequatur velit dolor ad et magnam veniam voluptatum reiciendis adipisci adipisci.",
                            Duur = 3,
                            Naam = "Ullam aspernatur quod minima porro ullam dolores neque consectetur et qui deleniti labore quo earum sapiente in recusandae saepe necessitatibus."
                        },
                        new
                        {
                            Id = 12,
                            BeschikbarePlaatsen = 204,
                            Beschrijving = "Minus ut recusandae ipsam fugiat molestiae laboriosam nostrum est dolores voluptatum sit illo ut et illo aperiam maxime sed ratione.",
                            Duur = 4,
                            Naam = "Qui et eum itaque ea excepturi sit enim non nihil nihil quod vero quisquam omnis dignissimos repellendus nam quas doloribus."
                        },
                        new
                        {
                            Id = 13,
                            BeschikbarePlaatsen = 263,
                            Beschrijving = "Dolor et qui a libero vel sequi dolor maiores rerum et earum ea id cum molestiae totam cumque occaecati aut.",
                            Duur = 4,
                            Naam = "Modi ex ipsa rerum vitae ex rem nobis pariatur ea eum ratione neque aut omnis omnis vel modi delectus eum."
                        },
                        new
                        {
                            Id = 14,
                            BeschikbarePlaatsen = 397,
                            Beschrijving = "Laboriosam deleniti pariatur rerum minima quibusdam qui non omnis quia ipsum repellendus aliquid a et inventore ad doloribus placeat suscipit.",
                            Duur = 3,
                            Naam = "Doloribus autem velit doloremque est doloremque voluptatem et ea labore aliquid similique qui deleniti itaque perferendis voluptas sit quidem voluptatem."
                        },
                        new
                        {
                            Id = 15,
                            BeschikbarePlaatsen = 288,
                            Beschrijving = "Hic accusamus modi qui doloremque aut quia ab possimus iusto sit cumque non esse expedita corrupti quae est sed velit.",
                            Duur = 3,
                            Naam = "Nihil quidem sed fuga perferendis ut modi occaecati nihil debitis earum non est amet reiciendis minus culpa unde laudantium illo."
                        },
                        new
                        {
                            Id = 16,
                            BeschikbarePlaatsen = 328,
                            Beschrijving = "Atque et quae ut vel nihil ea est a earum natus nihil non vel corrupti qui sapiente ut incidunt accusamus.",
                            Duur = 3,
                            Naam = "Dignissimos et autem ut nihil ea in voluptas quod doloribus laboriosam animi rerum fugiat repudiandae laboriosam voluptatibus tenetur est voluptas."
                        },
                        new
                        {
                            Id = 17,
                            BeschikbarePlaatsen = 364,
                            Beschrijving = "Repellendus magnam enim et aut qui et alias nostrum necessitatibus fugiat nobis sint ratione error iste ipsa dicta architecto quaerat.",
                            Duur = 3,
                            Naam = "Voluptates perferendis dolore sapiente repudiandae esse unde et illum culpa consequatur excepturi neque facilis voluptatem nam porro aut consequuntur beatae."
                        },
                        new
                        {
                            Id = 18,
                            BeschikbarePlaatsen = 277,
                            Beschrijving = "Accusantium sit et facilis possimus quas deleniti ex quo doloremque aut eius iure consequatur rerum nisi rerum quibusdam quo sunt.",
                            Duur = 3,
                            Naam = "Harum et sit doloremque harum temporibus nihil qui eius repellat autem quis iure atque omnis sequi et qui optio dolore."
                        },
                        new
                        {
                            Id = 19,
                            BeschikbarePlaatsen = 343,
                            Beschrijving = "Velit consequatur et quia sit veritatis deleniti et non est dolorum quis iure harum aut earum maxime praesentium ut est.",
                            Duur = 3,
                            Naam = "Esse dolorem aperiam et maiores eius tenetur nemo ut et fugiat consequatur rerum officiis necessitatibus omnis nam adipisci autem nulla."
                        },
                        new
                        {
                            Id = 20,
                            BeschikbarePlaatsen = 256,
                            Beschrijving = "Beatae molestias suscipit ipsum vitae exercitationem hic consequuntur dolores qui et aut soluta quibusdam non praesentium quae odit rerum quibusdam.",
                            Duur = 4,
                            Naam = "Repellendus non ducimus cumque animi numquam qui doloribus voluptates quo omnis quo ipsum quidem omnis id ut veritatis omnis dolores."
                        });
                });

            modelBuilder.Entity("Simpleschool.Models.StudentenKaart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Klas")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Naam")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("School")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("StudentenKaart");

                    b.HasData(
                        new
                        {
                            Id = 11,
                            Klas = "alias",
                            Naam = "Siep Dijk Sr.",
                            School = "Stichting, Mulder and Heuvel"
                        },
                        new
                        {
                            Id = 12,
                            Klas = "ipsum",
                            Naam = "Dhr. Bodhi Smits",
                            School = "Stichting, Smits and Maas"
                        },
                        new
                        {
                            Id = 13,
                            Klas = "laborum",
                            Naam = "Lauren Willems Sr.",
                            School = "Bruin, Hoek and Klein"
                        },
                        new
                        {
                            Id = 14,
                            Klas = "est",
                            Naam = "Jacky Ruiter Sr.",
                            School = "Bruin - Smits"
                        },
                        new
                        {
                            Id = 15,
                            Klas = "aut",
                            Naam = "George Jacobs Jr.",
                            School = "Klein N.V."
                        },
                        new
                        {
                            Id = 16,
                            Klas = "sit",
                            Naam = "Msc Miguel Groot",
                            School = "Vos IT"
                        },
                        new
                        {
                            Id = 17,
                            Klas = "nam",
                            Naam = "Khadija Meer I",
                            School = "Janssen International"
                        },
                        new
                        {
                            Id = 18,
                            Klas = "aut",
                            Naam = "Janne Peters II",
                            School = "Smit, Peters and Veen"
                        },
                        new
                        {
                            Id = 19,
                            Klas = "amet",
                            Naam = "Nout Heuvel II",
                            School = "Beek, Dekker and Graaf"
                        },
                        new
                        {
                            Id = 20,
                            Klas = "facere",
                            Naam = "Dhr. Vieve Linden",
                            School = "Veen - Vliet"
                        });
                });

            modelBuilder.Entity("Simpleschool.Models.Vak", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AantalStudiePunten")
                        .HasColumnType("int");

                    b.Property<int>("LeerkrachtId")
                        .HasColumnType("int");

                    b.Property<string>("Naam")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Taal")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Vaktype")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LeerkrachtId");

                    b.ToTable("Vak");

                    b.HasData(
                        new
                        {
                            Id = 11,
                            AantalStudiePunten = 16,
                            LeerkrachtId = 0,
                            Naam = "Noud Vries III",
                            Taal = "Dynamic",
                            Vaktype = 0
                        },
                        new
                        {
                            Id = 12,
                            AantalStudiePunten = 25,
                            LeerkrachtId = 0,
                            Naam = "Prof. Samuel Vries",
                            Taal = "Steel",
                            Vaktype = 1
                        },
                        new
                        {
                            Id = 13,
                            AantalStudiePunten = 45,
                            LeerkrachtId = 0,
                            Naam = "Lex Boer II",
                            Taal = "primary",
                            Vaktype = 1
                        },
                        new
                        {
                            Id = 14,
                            AantalStudiePunten = 45,
                            LeerkrachtId = 0,
                            Naam = "Anna Brouwer I",
                            Taal = "salmon",
                            Vaktype = 0
                        },
                        new
                        {
                            Id = 15,
                            AantalStudiePunten = 21,
                            LeerkrachtId = 0,
                            Naam = "Prof. Louay Janssen",
                            Taal = "bypassing",
                            Vaktype = 1
                        },
                        new
                        {
                            Id = 16,
                            AantalStudiePunten = 11,
                            LeerkrachtId = 0,
                            Naam = "Manu Dam IV",
                            Taal = "Health & Music",
                            Vaktype = 0
                        },
                        new
                        {
                            Id = 17,
                            AantalStudiePunten = 33,
                            LeerkrachtId = 0,
                            Naam = "Natan Groot I",
                            Taal = "CFP Franc",
                            Vaktype = 0
                        },
                        new
                        {
                            Id = 18,
                            AantalStudiePunten = 36,
                            LeerkrachtId = 0,
                            Naam = "Matthijs Meijer Jr.",
                            Taal = "5th generation",
                            Vaktype = 1
                        },
                        new
                        {
                            Id = 19,
                            AantalStudiePunten = 15,
                            LeerkrachtId = 0,
                            Naam = "Ted Leeuwen I",
                            Taal = "payment",
                            Vaktype = 1
                        },
                        new
                        {
                            Id = 20,
                            AantalStudiePunten = 38,
                            LeerkrachtId = 0,
                            Naam = "Prof. Dirk Janssen",
                            Taal = "Cape Verde",
                            Vaktype = 0
                        });
                });

            modelBuilder.Entity("OpleidingVak", b =>
                {
                    b.HasOne("Simpleschool.Models.Opleiding", null)
                        .WithMany()
                        .HasForeignKey("OpleidingenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Simpleschool.Models.Vak", null)
                        .WithMany()
                        .HasForeignKey("VakkenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Simpleschool.Models.Leerling", b =>
                {
                    b.HasOne("Simpleschool.Models.Opleiding", "Opleiding")
                        .WithMany("Leerlingen")
                        .HasForeignKey("OpleidingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Simpleschool.Models.StudentenKaart", "Studentenkaart")
                        .WithOne("Leerling")
                        .HasForeignKey("Simpleschool.Models.Leerling", "StudentenkaartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Opleiding");

                    b.Navigation("Studentenkaart");
                });

            modelBuilder.Entity("Simpleschool.Models.Vak", b =>
                {
                    b.HasOne("Simpleschool.Models.Leerkracht", "Leerkracht")
                        .WithMany("Vakken")
                        .HasForeignKey("LeerkrachtId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Leerkracht");
                });

            modelBuilder.Entity("Simpleschool.Models.Leerkracht", b =>
                {
                    b.Navigation("Vakken");
                });

            modelBuilder.Entity("Simpleschool.Models.Opleiding", b =>
                {
                    b.Navigation("Leerlingen");
                });

            modelBuilder.Entity("Simpleschool.Models.StudentenKaart", b =>
                {
                    b.Navigation("Leerling")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
